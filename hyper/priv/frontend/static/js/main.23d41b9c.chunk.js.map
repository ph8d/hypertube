{"version":3,"sources":["img/not_found.jpg","helpers/imgHelpers.js","components/Header.js","components/Footer.js","components/Movie.js","components/Login.js","components/Registration.js","components/LostPass.js","components/NewPass.js","components/Auth.js","components/NotFound.js","components/User.js","components/Library.js","components/SettingsPage/PictureSection.js","components/SettingsPage/ProfileSection.js","helpers/simpleValidator.js","components/SettingsPage/AccountSection.js","components/SettingsPage/OtherSection.js","components/SettingsPage/index.js","helpers/i18n.js","HyperTube.js","serviceWorker.js","stores/LibraryStore.js","stores/SelfStore.js","stores/AuthStore.js","stores/UserStore.js","stores/MovieStore.js","stores/index.js","index.js"],"names":["module","exports","__webpack_require__","p","imgHelpers","file","Promise","resolve","reject","reader","FileReader","onload","e","target","result","onerror","console","error","readAsDataURL","data","classes","avatar","react_default","a","createElement","index_es","className","src","process","concat","fname","charAt","lname","Header","withNamespaces","inject","observer","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","anchorEl","logoutUser","bind","assertThisInitialized","handleMenu","handleMenuClose","SelfStore","forgetSelf","AuthStore","logout","setState","currentTarget","t","self","isMenuOpen","Fragment","aria-owns","undefined","aria-haspopup","onClick","color","id","anchorOrigin","vertical","horizontal","transformOrigin","open","onClose","button","component","Link","to","icon","Typography_default","variant","noWrap","Button_default","buttons","_this$props","root","AppBar_default","position","Toolbar_default","toolbar","logo","renderAuthButtons","Component","withStyles","flexGrow","grow","justifyContent","marginLeft","textDecoration","Footer","footer","align","bottom","backgroundColor","width","padding","Movie","movieId","match","params","commentValue","streamingUrl","resolution","handleInput","handleSubmit","handleSelection","resetCommentInput","MovieStore","fetchMovieDetails","fetchComments","resetMovie","value","trim","length","preventDefault","_this$state","comment","postComment","url","LibraryStore","setSelectedMovieAsWatched","movie","trailer","Grid_default","item","playerContainer","ReactPlayer_default","controls","reactPlayer","config","attributes","crossOrigin","tracks","subtitles","height","_this2","_this$props2","streaming","map","streamUrl","split","pop","key","leftIcon","container","justify","size","_this$props3","_this$state2","_this$props$MovieStor","comments","xs","md","Paper_default","spacing","direction","xl","zeroMinWidth","media","poster_path","alt","movieDetails","gutterBottom","title","inline","original_title","release_date","runtime","vote_average","credits","crew","directors","join","producers","main_cast","overview","renderStreamingButtons","renderPlayer","divider","commentForm","noValidate","autoComplete","alignItems","onChange","placeholder","rowsMax","fullWidth","multiline","InputProps","endAdornment","renderCommentSectionActions","i","link","uname","disableTypography","primary","secondary","commentText","text","distanceInWordsToNow","Date","dt","addSuffix","theme","marginTop","unit","marginBottom","marginRight","margin","paddingTop","top","left","minWidth","defineProperty","paddingLeft","paddingRight","breakpoints","up","wordWrap","display","Login","resetStore","_e$target","name","setFieldValue","login","_this$props$AuthStore","fields","errors","onSubmit","paper","elevation","FormControl_default","required","InputLabel_default","htmlFor","Input_default","type","FormHelperText_default","password","href","aria-hidden","forgotPassword","forgotPasswordLink","flexDirection","maxWidth","authBtnsContainer","textAlign","styles","buttonProgress","grey","Registration","isLoading","isDialogOpen","handleDialogClose","register","reason","history","push","aria-labelledby","aria-describedby","autoFocus","email","confirmPassword","disabled","LostPass","lostPass","NewPass","newPass","Auth","Redirect","Switch","Route","exact","path","NotFound","notFound","not_found","User","UserStore","pullUser","username","user","components_NotFound","layout","avatarContainer","renderAvatar","mainUserInfo","bio","paragraph","palette","editButton","MenuProps","PaperProps","style","maxHeight","ITEM_HEIGHT","_genres","28","12","16","35","80","99","18","10751","14","36","27","10402","9648","10749","878","10770","53","10752","37","Library","handleMovieClick","movieIndex","_lastSelectedMovie","deleteSelectedGenre","genreId","deleteGenre","fetchMovies","queryString","handleSearchFormSubmit","handleGenreSelect","renderGenreSelectValues","handleFilterChange","disableSearchMode","renderHelpers","renderMovies","renderLoadMoreButton","handleMovieSearch","handleLoadMore","searchField","React","createRef","movies","resetMovies","setSearchMode","setCurrentQuery","current","focus","setSelectionRange","genres","page","arguments","fetchSearchResults","currentPage","searchMode","setFilter","setGenres","selectedGenres","chips","label","chip","onDelete","_this$props$LibrarySt","currentQuery","dateTemplate","options","year","fullDate","vote_count","_this3","card","image","watched_films_count","renderMovieRating","_this4","totalPages","_this5","_this$props4","filters","filtersContainer","wrap","filterItem","formControl","sort_by","input","multiple","with_genres","renderValue","keys","index","checked","includes","displayEmpty","startAdornment","renderYearOptions","shrink","inputRef","backButton","focusRipple","flexWrap","objectFit","yearInput","PictureSection","snackbarOpen","onFileChange","importPictureFromSocial","deleteCurrentPicture","handleSnackbarClose","fileInput","files","updateProfile","success","_context","t0","autoHideDuration","message","action","aria-label","renderSnackBar","disablePadding","subheader","disableSticky","click","social_provider","ref","accept","ProfileSection","selectedField","inputValue","inputError","handleItemClick","handleFormSubmit","saveFieldValue","fieldName","isValid","EmailValidator","simpleValidator","isValidField","toLowerCase","renderInputDialog","wordBreak","AccountSection","emailDialogOpen","passwordDialogOpen","old_password","new_password","confirm","closeDialogs","updateEmail","updatePassword","_this$setState","validate","_this$state3","_this$state4","renderEmailDialog","renderPasswordDialog","OtherSection","dialogOpen","openDialog","updateLocale","locale","control","selectedLanguage","renderDialog","SettingsPage","SettingsPage_PictureSection","SettingsPage_ProfileSection","SettingsPage_AccountSection","SettingsPage_OtherSection","i18n","init","lng","resources","en","settingsPage","other","language","cancel","save","account","changePassword","currentPassword","newPassword","changeEmail","none","profile","changeField","emailAddress","emailDialog","ok","importPicture","uploadPicture","deletePicture","imageProcessingFailed","tooBigFile","header","settings","Username","library","sortBy","popularityAscending","popularityDescending","ratingAscending","ratingDescending","releaseDateAscending","releaseDateDescending","revenueAscending","revenueDescending","originalTitleAscending","originalTitleDescending","releaseYear","any","search","close","rating","noRating","adventure","animation","comedy","crime","documentary","drama","family","fantasy","horror","music","mystery","romance","scienceFiction","tvMovie","thriller","war","western","releaseDataUnknown","loadMore","unavailable","stream","send","originalTitle","releaseDate","liveComment","mainCast","streamIn","minutes","LogIn","logIn","registration","checkEmail","ru","createMuiTheme","blue","typography","useNextVariants","HyperTube","pullSelf","es","core_styles","BrowserRouter","CssBaseline_default","components_Header","HyperTube_PrivateRoute","components_Footer","PrivateRoute","rest","objectWithoutProperties","assign","render","Boolean","window","location","hostname","stores_LibraryStore","status","pages","moreMovies","_this$movies","apply","toConsumableArray","genreToDelete","indexOf","splice","primary_release_date.gte","primary_release_date.lte","vote_average.gte","pageToFetch","_getDefinedFilters","setIsLoading","axios","get","withCredentials","response","_response$data$movies","total_pages","results","setMovies","pushMovies","setPage","setTotalPages","log","query","_response$data$movies2","_context2","currentFilters","definedFilterKeys","forEach","filter","toJS","observable","store","payload","setSelf","setLocale","updateSelfField","values","post","updatedValue","_context3","_context4","_context5","_context6","reaction","changeLanguage","stores_AuthStore","field","_validateFields","clearErrors","setErrors","_this$fields2","setError","stores_UserStore","setUser","stores_MovieStore","unshift","_response$data","details","movie_details","setMovie","objectSpread","setComments","body","imdb_id","addComment","stores","ReactDOM","index_module","src_HyperTube_0","document","getElementById","navigator","serviceWorker","ready","then","unregister"],"mappings":"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","file":"static/js/main.23d41b9c.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/not_found.f7f419f8.jpg\";","import {Avatar} from \"@material-ui/core\";\nimport React from \"react\";\n\n/**\n * @param {File} file - Image File Object\n */\n\nconst imgFileToBase64 = (file) => {\n\treturn new Promise((resolve, reject) => {\n\t\tlet reader = new FileReader();\n\n\t\treader.onload = e => {\n\t\t\tresolve(e.target.result);\n\t\t}\n\n\t\treader.onerror = e => {\n\t\t\tconsole.error(e.target.error);\n\t\t\treject(e.target.error);\n\t\t}\n\n\t\treader.readAsDataURL(file);\n\t});\n}\n\n\n/**\n * @param {File} image - Image File Object\n * @param {Object} crop - pixelCrop Object provided by react-image-crop\n */\n\nconst getCroppedImgBlob = (image, crop) => {\n\tconst canvas = document.createElement('canvas');\n\tcanvas.width = crop.width;\n\tcanvas.height = crop.height;\n\t\n\tconst context = canvas.getContext('2d');\n\n\tcontext.drawImage(\n\t\timage,\n\t\tcrop.x,\n\t\tcrop.y,\n\t\tcrop.width,\n\t\tcrop.height,\n\t\t0,\n\t\t0,\n\t\tcrop.width,\n\t\tcrop.height\n\t);\n\n\treturn new Promise((resolve, reject) => {\n\t\tcanvas.toBlob(file => {\n\t\t\tfile.name = image.name;\n\t\t\tresolve(file);\n\t\t}, 'image/jpeg');\n\t});\n};\n\nconst renderAvatar = (data, classes) => {\n    if (data.avatar) {\n        return <Avatar className={classes ? classes.avatar : ''} src={process.env.REACT_APP_ERL_API_URL + data.avatar} />;\n    } else {\n        return (\n            <Avatar className={classes ? classes.avatar : ''} src={data.avatar} >\n                {`${data.fname.charAt(0)}${data.lname.charAt(0)}`}\n            </Avatar>\n        );\n    }\n}\n\nexport default {\n\timgFileToBase64,\n\tgetCroppedImgBlob,\n    renderAvatar\n};\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport AppBar from '@material-ui/core/AppBar';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Button from '@material-ui/core/Button';\nimport { inject, observer } from 'mobx-react';\nimport imgHelpers from '../helpers/imgHelpers';\nimport { withNamespaces } from 'react-i18next';\nimport { Link } from 'react-router-dom'\nimport { IconButton, Menu, MenuItem, ListItemIcon, Icon } from '@material-ui/core';\n\nconst styles = {\n    root: {\n        flexGrow: 1,\n    },\n    grow: {\n        flexGrow: 1,\n    },\n    toolbar: {\n        justifyContent: 'space-between'\n    },\n    buttons: {\n        marginLeft: 5\n    },\n    logo: {\n        textDecoration: 'none'\n    }\n};\n\n@withNamespaces()\n@inject('SelfStore', 'AuthStore') @observer\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n        anchorEl: null\n    };\n\n    this.logoutUser = this.logoutUser.bind(this);\n    this.handleMenu = this.handleMenu.bind(this);\n    this.handleMenuClose = this.handleMenuClose.bind(this);\n  }\n\n  logoutUser() {\n    this.handleMenuClose();\n    this.props.SelfStore.forgetSelf();\n    this.props.AuthStore.logout();\n  }\n\n  handleMenu(e) {\n    this.setState({ anchorEl: e.currentTarget });\n  }\n\n  handleMenuClose(e) {\n    this.setState({ anchorEl: null });\n  }\n\n  renderAuthButtons(classes, t) {\n    const { self } = this.props.SelfStore;\n    const { anchorEl } = this.state;\n\n    if (self) {\n        const isMenuOpen = !!anchorEl;\n\n        return (\n            <React.Fragment>\n                <IconButton\n                  aria-owns={isMenuOpen ? 'menu-appbar' : undefined}\n                  aria-haspopup=\"true\"\n                  onClick={this.handleMenu}\n                  color=\"inherit\"\n                >\n                  { imgHelpers.renderAvatar(self, classes) }\n                </IconButton>\n                <Menu\n                  id=\"menu-appbar\"\n                  anchorEl={anchorEl}\n                  anchorOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  transformOrigin={{\n                    vertical: 'top',\n                    horizontal: 'right',\n                  }}\n                  open={isMenuOpen}\n                  onClose={this.handleMenuClose}\n                >\n                    <MenuItem onClick={this.handleMenuClose} button component={Link} to=\"/settings\" >\n                        <ListItemIcon className={classes.icon}>\n                            <Icon>settings</Icon>\n                        </ListItemIcon>\n                        <Typography variant=\"inherit\" noWrap>\n                            {t('header:settings')}\n                        </Typography>\n                    </MenuItem>\n                    <MenuItem button onClick={this.logoutUser} >\n                        <ListItemIcon className={classes.icon}>\n                            <Icon>exit_to_app</Icon>\n                        </ListItemIcon>\n                        <Typography variant=\"inherit\" noWrap>\n                            {t('header:logout')}\n                        </Typography>\n                    </MenuItem>\n                </Menu>\n            </React.Fragment>\n        )\n    } else {\n        return (\n            <div>\n                <Button component={Link} to=\"/auth/registration\" className={classes.buttons} color=\"inherit\">\n                    {t('header:register')}\n                </Button>\n                <Button component={Link} to=\"/auth/login\" className={classes.buttons} color=\"inherit\">\n                    {t('header:login')}\n                </Button>\n            </div>\n        )\n    }\n  }\n  \n  render() {\n        const { classes, t } = this.props;\n        return (\n            <div className={classes.root}>\n                <AppBar position=\"static\">\n                    <Toolbar className={classes.toolbar}>\n                        <Typography\n                            className={classes.logo}\n                            variant=\"h6\"\n                            color=\"inherit\"\n                            component={Link}\n                            to=\"/\"\n                        >\n                            HyperTube\n                        </Typography>\n                        { this.renderAuthButtons(classes, t) }\n                    </Toolbar>\n                </AppBar>\n            </div>\n        );\n\t}\n};\n\n\nexport default withStyles(styles)(Header);\n","import React, { Component } from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\n\nconst styles = {\n\tfooter: {\n\t\tposition: 'absolute',\n\t\tbottom: '0',\n\t\tbackgroundColor: '#f1f3f4',\n\t\twidth: '100%',\n\t\tpadding: '8px'\n\n  }\n};\n\nclass Footer extends Component {\n\trender() {\n\t\tconst { classes } = this.props;\n\t\treturn (\n\t\t\t<footer className={classes.footer}>\n\t\t\t\t<Typography variant=\"body2\" align=\"center\" color=\"textSecondary\">\n\t\t\t\t\trtarasen © 2018\n\t\t\t\t</Typography>\n\t\t\t</footer>\n\t\t);\n\t}\n};\n\nexport default withStyles(styles)(Footer);\n","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport { TextField, Typography, CircularProgress, Button, List, ListItem, ListItemAvatar, ListItemText, Icon, Divider, InputAdornment } from '@material-ui/core';\nimport ReactPlayer from 'react-player';\nimport imgHelpers from '../helpers/imgHelpers';\nimport { Link } from 'react-router-dom';\nimport { withNamespaces } from 'react-i18next';\n\nimport { distanceInWordsToNow } from 'date-fns';\n\nconst styles = theme => ({\n    root: {\n        marginTop: theme.spacing.unit * 2,\n        marginBottom: theme.spacing.unit * 2,\n        marginLeft: 'auto',\n        marginRight: 'auto',\n    },\n    item: {\n        margin: theme.spacing.unit\n    },\n    media: {\n        width: '100%'\n    },\n    playerContainer: {\n        position: 'relative',\n        paddingTop: 'calc((9 / 16) * 100%)',\n        backgroundColor: '#000',\n    },\n    reactPlayer: {\n        position: 'absolute',\n        top: 0,\n        left: 0\n    },\n    container: {\n        padding: theme.spacing.unit * 2\n    },\n    movieDetails: {\n        minWidth: '300px',\n        margin: theme.spacing.unit\n    },\n    commentForm: {\n        paddingTop: theme.spacing.unit * 2,\n        paddingLeft: theme.spacing.unit * 2,\n        paddingRight: theme.spacing.unit * 2,\n        [theme.breakpoints.up(600)]: {\n            paddingLeft: theme.spacing.unit * 3,\n            paddingRight: theme.spacing.unit * 3,\n\t\t}\n    },\n    commentText: {\n        wordWrap: 'break-word'\n    },\n    leftIcon: {\n        marginRight: theme.spacing.unit,\n    },\n    inline: {\n        display: 'inline',\n    },\n    link: {\n        textDecoration: 'none',\n        color: 'white'\n    },\n    divider: {\n        marginLeft: theme.spacing.unit * 3,\n        marginRight: theme.spacing.unit * 3\n    }\n});\n\n@withNamespaces()\n@inject('MovieStore', 'SelfStore', 'LibraryStore') @observer\nclass Movie extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            movieId: this.props.match.params.id,\n            commentValue: '',\n            streamingUrl: undefined,\n            resolution: undefined\n        };\n        this.handleInput = this.handleInput.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n        this.resetCommentInput = this.resetCommentInput.bind(this);\n        this.handleSelection = this.handleSelection.bind(this);\n    }\n\n    componentDidMount() {\n        const { movieId } = this.state;\n        const { MovieStore } = this.props;\n\n        MovieStore.fetchMovieDetails(movieId);\n        MovieStore.fetchComments(movieId);\n    }\n\n    componentWillUnmount() {\n        this.props.MovieStore.resetMovie();\n    }\n\n    handleInput(e) {\n        const { value } = e.target;\n        const comment = value.trim();\n\n        if (comment.length > 500) return;\n        this.setState({\n            commentValue: e.target.value\n        });\n    }\n\n    resetCommentInput() {\n        this.setState({ commentValue: '' });\n    }\n\n    handleSubmit(e) {\n        e.preventDefault();\n\n        const { MovieStore } = this.props;\n        const { movieId, commentValue } = this.state;\n\n        const comment = commentValue.trim();\n        if (comment.length > 500) return;\n\n        MovieStore.postComment(movieId, comment);\n        this.resetCommentInput();\n    }\n\n    handleSelection(url, resolution) {\n        const { LibraryStore } = this.props;\n        this.setState({ streamingUrl: url, resolution });\n        LibraryStore.setSelectedMovieAsWatched();\n    }\n\n    renderPlayer() {\n        const { MovieStore, classes } = this.props;\n        const { movie } = MovieStore;\n        const { streamingUrl } = this.state;\n\n        if (streamingUrl || movie.trailer) {\n            return (\n                <Grid item className={classes.playerContainer}>\n                    <ReactPlayer\n                        controls\n                        className={classes.reactPlayer}\n                        url={streamingUrl || movie.trailer}\n                        config={{\n                            file: {\n                                attributes: {\n                                    crossOrigin: \"use-credentials\"\n                                },\n                                tracks: movie.subtitles\n                            }\n                        }}\n                        width='100%'\n                        height='100%'\n                    />\n                </Grid>\n            );\n        }\n    }\n\n    renderStreamingButtons() {\n        const { classes, t, MovieStore } = this.props;\n        const { movie } = MovieStore;\n        \n\n        if (movie && movie.streaming) {\n            const buttons = movie.streaming.map(streamUrl => {\n                const resolution = streamUrl.split('/').pop();\n                return (\n                    <Grid key={streamUrl} item className={classes.item}>\n                        <Button \n                            variant=\"contained\"\n                            color=\"primary\"\n                            onClick={() => this.handleSelection(streamUrl, resolution)}\n                        >\n                            <Icon className={classes.leftIcon}>play_arrow</Icon>\n                            { `${t('movie:streamIn')} ${resolution}` }\n                        </Button>\n                    </Grid>\n                );\n            });\n\n            return (\n                <Grid item className={classes.item}>\n                    <Grid container justify=\"center\">\n                        {buttons}\n                    </Grid>\n                </Grid>\n            );\n        }\n    }\n\n    renderCommentSectionActions(classes) {\n        const { t } = this.props;\n        return (\n            <Grid container justify=\"flex-end\">\n                <Grid item className={classes.item}>\n                    <Button\n                        onClick={this.resetCommentInput}\n                        variant=\"text\"\n                        size=\"small\"\n                    >\n                        {t('movie:cancel')}\n                    </Button>\n                </Grid>\n                <Grid item className={classes.item}>\n                    <Button\n                        onClick={this.handleSubmit}\n                        variant=\"contained\"\n                        color=\"primary\"\n                        size=\"small\"\n                    >\n                        {t('movie:send')}\n                    </Button>\n                </Grid>\n            </Grid>\n        );\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { commentValue, streamingUrl } = this.state;\n        const { self } = this.props.SelfStore; \n        const { movie, comments } = this.props.MovieStore;\n\n        if (movie === undefined) {\n            return (\n                <main>\n                    <Grid container className={classes.container} justify=\"center\">\n                        <Grid item>\n                            <CircularProgress />\n                        </Grid>\n                    </Grid>\n                </main>\n            );\n        } else if (movie === null) {\n            return (\n                <main>\n                    <Grid container className={classes.container} justify=\"center\">\n                        <Grid item>\n                            <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                                {t('movie:unavailable')}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                </main>\n            );\n        } else {\n            return (\n                <main>\n\n                    <Grid item xs md={8} className={classes.root}>\n                        <Paper>\n                            <Grid container spacing={0} direction=\"column\">\n\n                                <Grid container justify=\"center\" direction=\"column\" className={classes.container}>\n\n                                    <Grid container item justify=\"center\">\n\n                                            <Grid item md={5} xl={4} zeroMinWidth className={classes.item}>\n                                                <div>\n                                                    <img\n                                                        className={classes.media}\n                                                        src={ movie.poster_path }\n                                                        alt=\"Movie poster\"\n                                                    />\n                                                </div>\n                                            </Grid>\n\n                                            <Grid item xs className={classes.movieDetails}>\n                                                <Grid container direction=\"column\">\n                                                    <Grid item>\n                                                        <Typography variant=\"h5\" gutterBottom>\n                                                            {movie.title}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography className={classes.inline} variant=\"subtitle2\" color=\"textPrimary\">\n                                                            {t('movie:originalTitle')}\n                                                        </Typography>\n                                                        <Typography className={classes.inline} variant=\"body2\" color=\"textPrimary\">\n                                                            {movie.original_title}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography className={classes.inline} variant=\"subtitle2\" color=\"textPrimary\">\n                                                            {t('movie:releaseDate')}\n                                                        </Typography>\n                                                        <Typography className={classes.inline} variant=\"body2\" color=\"textPrimary\">\n                                                            { movie.release_date }\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography className={classes.inline} variant=\"subtitle2\" color=\"textPrimary\">\n                                                            {t('movie:runtime')}\n                                                        </Typography>\n                                                        <Typography className={classes.inline} variant=\"body2\" color=\"textPrimary\">\n                                                            {movie.runtime + ' ' + t('movie:minutes')}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography className={classes.inline} variant=\"subtitle2\" color=\"textPrimary\">\n                                                            {t('movie:rating')}\n                                                        </Typography>\n                                                        <Typography className={classes.inline} variant=\"body2\" color=\"textPrimary\">\n                                                            {movie.vote_average}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography className={classes.inline} variant=\"subtitle2\" color=\"textPrimary\">\n                                                            {t('movie:directors')}\n                                                        </Typography>\n                                                        <Typography className={classes.inline} variant=\"body2\" color=\"textPrimary\">\n                                                            {movie.credits.crew.directors.join(', ')}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography className={classes.inline} variant=\"subtitle2\" color=\"textPrimary\">\n                                                            {t('movie:producers')}\n                                                        </Typography>\n                                                        <Typography className={classes.inline} variant=\"body2\" color=\"textPrimary\">\n                                                            {movie.credits.crew.producers.join(', ')}\n                                                        </Typography>\n                                                    </Grid>\n                                                    <Grid item>\n                                                        <Typography className={classes.inline} variant=\"subtitle2\" color=\"textPrimary\">\n                                                            {t('movie:mainCast')}\n                                                        </Typography>\n                                                        <Typography className={classes.inline} variant=\"body2\" color=\"textPrimary\">\n                                                            {movie.credits.main_cast.join(', ')}\n                                                        </Typography>\n                                                    </Grid>\n                                                </Grid>\n                                            </Grid>\n\n                                    </Grid>\n\n                                    {\n                                        !!movie.overview &&\n                                        <Grid item className={classes.item}>\n                                            <Typography variant=\"body1\">\n                                                {movie.overview}\n                                            </Typography>\n                                        </Grid>\n                                    }\n\n                                    { this.renderStreamingButtons() }\n\n                                </Grid>\n                                \n                                \n                                { this.renderPlayer() }\n\n                                { !streamingUrl && !movie.trailer && <Divider className={classes.divider} /> }\n\n                                <Grid container direction=\"column\" className={classes.container}>\n\n                                    <Grid item className={classes.commentForm}>\n                                        <form noValidate autoComplete=\"off\">\n                                            <Grid container spacing={16} alignItems=\"flex-start\">\n                                                <Grid item>\n                                                    {  imgHelpers.renderAvatar(self, classes) }\n                                                </Grid>\n                                                <Grid item xs>\n                                                    <TextField\n                                                        value={commentValue}\n                                                        onChange={this.handleInput}\n                                                        placeholder={t('movie:liveComment')}\n                                                        rowsMax={5}\n                                                        fullWidth\n                                                        multiline\n                                                        InputProps={{\n                                                            endAdornment: <InputAdornment position=\"start\">{`${commentValue.length}/500`}</InputAdornment>,\n                                                        }}\n                                                    />\n                                                </Grid>\n                                                { commentValue && this.renderCommentSectionActions(classes) }\n                                            </Grid>\n                                        </form>\n                                    </Grid>\n\n                                    <Grid item xs>\n                                        <List>\n                                        {\n                                            comments.map((comment, i) => (\n                                                <ListItem key={i} alignItems=\"flex-start\">\n                                                    <Link className={classes.link} to={\"/user/\" + comment.uname}>\n                                                        <ListItemAvatar>\n                                                            { imgHelpers.renderAvatar(comment, classes) }\n                                                        </ListItemAvatar>\n                                                    </Link>\n                                                    <ListItemText\n                                                        disableTypography\n                                                        primary={\n                                                            <Typography component=\"span\" variant=\"subtitle2\" color=\"textPrimary\">\n                                                                { comment.uname }\n                                                            </Typography>\n                                                        }\n                                                        secondary={\n                                                            <React.Fragment>\n                                                                <Typography className={classes.commentText} component=\"span\" variant=\"subtitle1\" color=\"textPrimary\">\n                                                                    { comment.text }\n                                                                </Typography>\n                                                                <Typography component=\"span\" variant=\"body2\" color=\"textSecondary\">\n                                                                    { distanceInWordsToNow(new Date(comment.dt) + \"UTC\" , { addSuffix: true })}\n                                                                </Typography>\n                                                            </React.Fragment>\n                                                        }\n                                                    />\n                                                </ListItem>\n                                            ))\n                                        }\n                                        </List>\n                                    </Grid>\n\n                                </Grid>\n\n                            </Grid>\n                        </Paper>\n                    </Grid>\n\n                </main>\n            );\n        }\n    }\n}\n\nexport default withStyles(styles)(Movie);","import React, {Component} from 'react';\nimport { inject, observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Link } from 'react-router-dom';\nimport { withNamespaces } from 'react-i18next';\n\nconst styles = {\n\tpaper: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tmaxWidth: 400,\n\t\tpadding: 20,\n\t\tmargin: 'auto',\n\t\tmarginTop: '6em'\n\t},\n\tbutton: {\n\t\tmarginTop: 15\n\t},\n\tauthBtnsContainer: {\n\t\tdisplay: 'flex',\n\t},\n\tforgotPassword: {\n\t\ttextAlign: 'center'\n\t},\n    forgotPasswordLink: {\n        color: 'black',\n        textDecoration: 'none'\n\t},\n};\n\n@withNamespaces()\n@inject('AuthStore') @observer\nclass Login extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.handleInput = this.handleInput.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.AuthStore.resetStore();\n\t}\n\n\thandleInput(e) {\n\t\tconst { AuthStore } = this.props;\n\t\tconst { name, value } = e.target;\n\t\tAuthStore.setFieldValue(name, value);\n\t}\n\t\n\thandleSubmit(e) {\n\t\te.preventDefault();\n\t\tthis.props.AuthStore.login();\n\t}\n\n\trender() {\n\t\tconst { fields, errors } = this.props.AuthStore;\n\t\tconst { classes, t } = this.props;\n\t\treturn (\n\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t<Paper className={classes.paper} elevation={1}>\n\t\t\t\t\t<Typography variant=\"h5\" align=\"center\" gutterBottom>\n\t\t\t\t\t\t{t('login:LogIn')}\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<FormControl required error={!!errors.uname} margin=\"dense\">\n\t\t\t\t\t\t<InputLabel htmlFor=\"uname\">{t('login:username')}</InputLabel>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tid=\"uname\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"uname\"\n\t\t\t\t\t\t\tvalue={fields.uname}\n\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormHelperText>{errors.uname}</FormHelperText>\n\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t<FormControl required error={!!errors.password} margin=\"dense\">\n\t\t\t\t\t\t<InputLabel htmlFor=\"password\">{t('login:password')}</InputLabel>\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\tvalue={fields.password}\n\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<FormHelperText>{errors.password}</FormHelperText>\n\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t<Button className={classes.button} variant=\"contained\" color=\"primary\" type=\"submit\">\n\t\t\t\t\t\t{t('login:logIn')}\n\t\t\t\t\t</Button>\n\n\t\t\t\t\t<div className=\"social\">\n\t\t\t\t\t\t<a title=\"GitHub\" href={`${process.env.REACT_APP_ERL_API_URL}/api/auth/github/login`}>\n\t\t\t\t\t\t\t<i className=\"fa fa-github\"></i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t\t<a title=\"Google\" href={`${process.env.REACT_APP_ERL_API_URL}/api/auth/google/login`}>\n\t\t\t\t\t\t\t<i  className=\"fa fa-google-plus-circle \" aria-hidden=\"true\"></i>\n\t\t\t\t\t\t</a>\n\t\t\t\t\t</div>\n\t\t\t\t\t<Typography variant=\"body1\" className={classes.forgotPassword}>\n\t\t\t\t\t\t<Link to=\"/auth/lostpass\" className={classes.forgotPasswordLink}>\n\t\t\t\t\t\t\t{t('login:forgotPassword')}\n\t\t\t\t\t\t</Link>\n\t\t\t\t\t</Typography>\n\t\t\t\t</Paper>\n\t\t\t</form>\n\t\t);\n\t}\n}\n\n\nexport default withStyles(styles)(Login);","import React, { Component } from 'react';\nimport { inject, observer } from 'mobx-react';\nimport { withStyles } from '@material-ui/core/styles';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, CircularProgress } from '@material-ui/core';\nimport { withNamespaces } from 'react-i18next';\n\n\nimport grey from '@material-ui/core/colors/grey';\n\nconst styles = {\n\tpaper: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tmaxWidth: 400,\n\t\tpadding: 20,\n\t\tmargin: 'auto',\n\t\tmarginTop: '6em'\n\t},\n\tbutton: {\n\t\tmarginTop: 15\n\t},\n\tbuttonProgress: {\n\t\tcolor: grey[500]\n\t}\n};\n\n@withNamespaces()\n@inject('AuthStore') @observer\nclass Registration extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t\tisDialogOpen: false,\n\t\t}\n\t\tthis.handleInput = this.handleInput.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleDialogClose = this.handleDialogClose.bind(this);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.AuthStore.resetStore();\n\t}\n\n\thandleInput(e) {\n\t\tconst { AuthStore } = this.props;\n\t\tconst { name, value } = e.target;\n\t\tAuthStore.setFieldValue(name, value);\n\t}\n\t\n\tasync handleSubmit(e) {\n\t\te.preventDefault();\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst success = await this.props.AuthStore.register();\n\t\tif (success) {\n\t\t\tthis.setState({ isDialogOpen: true });\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\thandleDialogClose(e, reason) {\n\t\tthis.setState({ isDialogOpen: false });\n\t\tthis.props.history.push('/auth/login');\n\t}\n\t\n\trender() {\n\t\tconst { fields, errors } = this.props.AuthStore;\n\t\tconst { classes, t } = this.props;\n\t\tconst { isLoading, isDialogOpen } = this.state;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\n\t\t\t\t<Dialog\n\t\t\t\t\topen={isDialogOpen}\n\t\t\t\t\tonClose={this.handleDialogClose}\n\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t\t\t>\n\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Registration successfull\"}</DialogTitle>\n\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t<DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t\t\t\t{t('registration:checkEmail')}\n\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t</DialogContent>\n\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t<Button onClick={this.handleDialogClose} color=\"primary\" autoFocus>\n\t\t\t\t\t\t\t{t('registration:ok')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</DialogActions>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Paper className={classes.paper} elevation={1}>\n\t\t\t\t\t\t<Typography align=\"center\" variant=\"h5\" gutterBottom>\n\t\t\t\t\t\t\t{t('registration:registration')}\n\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t<FormControl required error={!!errors.fname} margin=\"dense\">\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"fname\">{t('registration:fname')}</InputLabel>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"fname\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"fname\"\n\t\t\t\t\t\t\t\tvalue={fields.fname}\n\t\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormHelperText>{errors.fname}</FormHelperText>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<FormControl required error={!!errors.lname} margin=\"dense\">\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"lname\">{t('registration:lname')}</InputLabel>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"lname\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"lname\"\n\t\t\t\t\t\t\t\tvalue={fields.lname}\n\t\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormHelperText>{errors.lname}</FormHelperText>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<FormControl required error={!!errors.uname} margin=\"dense\">\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"uname\">{t('registration:username')}</InputLabel>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"uname\"\n\t\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\t\tname=\"uname\"\n\t\t\t\t\t\t\t\tvalue={fields.uname}\n\t\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormHelperText>{errors.uname}</FormHelperText>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<FormControl required error={!!errors.email} margin=\"dense\">\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"email\">{t('registration:email')}</InputLabel>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tvalue={fields.email}\n\t\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormHelperText>{errors.email}</FormHelperText>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<FormControl required error={!!errors.password} margin=\"dense\">\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"password\">{t('registration:password')}</InputLabel>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\tvalue={fields.password}\n\t\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormHelperText>{errors.password}</FormHelperText>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<FormControl required error={!!errors.confirmPassword} margin=\"dense\">\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"confirmPassword\">{t('registration:confirmPassword')}</InputLabel>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"confirmPassword\"\n\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\tvalue={fields.confirmPassword}\n\t\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormHelperText>{errors.confirmPassword}</FormHelperText>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\t\tsize=\"large\"\n\t\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{isLoading ? <CircularProgress size={24} className={classes.buttonProgress}/> : t('registration:register')}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t</form>\n\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(Registration);","import React, {Component} from 'react';\nimport { inject, observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions, CircularProgress } from '@material-ui/core';\n\nconst styles = {\n\tpaper: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tmaxWidth: 400,\n\t\tpadding: 20,\n\t\tmargin: 'auto',\n\t\tmarginTop: '6em'\n\t},\n\tbutton: {\n\t\tmarginTop: 15\n\t},\n\tauthBtnsContainer: {\n\t\tdisplay: 'flex',\n\t}\n};\n\n\n@inject('AuthStore') @observer\nclass LostPass extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\t\tthis.state = {\n\t\t\tisLoading: false,\n\t\t\tisDialogOpen: false,\n\t\t}\n\t\tthis.handleInput = this.handleInput.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleDialogClose = this.handleDialogClose.bind(this);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.AuthStore.resetStore();\n\t}\n\n\thandleInput(e) {\n\t\tconst { AuthStore } = this.props;\n\t\tconst { name, value } = e.target;\n\t\tAuthStore.setFieldValue(name, value);\n\t}\n\t\n\tasync handleSubmit(e) {\n\t\te.preventDefault();\n\t\tthis.setState({ isLoading: true });\n\n\t\tconst success = await this.props.AuthStore.lostPass();\n\t\tif (success) {\n\t\t\tthis.setState({ isDialogOpen: true });\n\t\t}\n\t\tthis.setState({ isLoading: false });\n\t}\n\n\thandleDialogClose(e, reason) {\n\t\tthis.setState({ isDialogOpen: false });\n\t}\n\n\trender() {\n\t\tconst { fields, errors } = this.props.AuthStore;\n\t\tconst { classes } = this.props;\n\t\tconst { isLoading, isDialogOpen } = this.state;\n\n\t\treturn (\n\t\t\t<React.Fragment>\n\n\t\t\t\t<Dialog\n\t\t\t\t\t\topen={isDialogOpen}\n\t\t\t\t\t\tonClose={this.handleDialogClose}\n\t\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\t\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t\t\t>\n\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Recovering email sent\"}</DialogTitle>\n\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t<DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t\t\t\t\tPlease, check your email and follow the link we've sent to recover your password.\n\t\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t<Button onClick={this.handleDialogClose} color=\"primary\" autoFocus>\n\t\t\t\t\t\t\t\tok\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<form onSubmit={this.handleSubmit}>\n\t\t\t\t\t<Paper className={classes.paper} elevation={1}>\n\t\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\t\tLost Password\n\t\t\t\t\t\t</Typography>\n\n\t\t\t\t\t\t<FormControl required error={!!errors.email} margin=\"dense\">\n\t\t\t\t\t\t\t<InputLabel htmlFor=\"email\">Email</InputLabel>\n\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\tid=\"email\"\n\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\tname=\"email\"\n\t\t\t\t\t\t\t\tvalue={fields.email}\n\t\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t<FormHelperText>{errors.email}</FormHelperText>\n\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t<Button \n\t\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t\t\tclassName={classes.button} \n\t\t\t\t\t\t\tvariant=\"contained\" \n\t\t\t\t\t\t\tcolor=\"primary\" \n\t\t\t\t\t\t\ttype=\"submit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{isLoading ? <CircularProgress size={24} className={classes.buttonProgress}/> : 'Submit'}\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Paper>\n\t\t\t\t</form>\n\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(LostPass);","import React, {Component} from 'react';\nimport { inject, observer } from 'mobx-react';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport { Dialog, DialogTitle, DialogContent, DialogContentText, DialogActions } from '@material-ui/core';\n\nconst styles = {\n\tpaper: {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tmaxWidth: 400,\n\t\tpadding: 20,\n\t\tmargin: 'auto',\n\t\tmarginTop: '6em'\n\t},\n\tbutton: {\n\t\tmarginTop: 15\n\t},\n\tauthBtnsContainer: {\n\t\tdisplay: 'flex',\n\t}\n  };\n\n\n@inject('AuthStore') @observer\nclass NewPass extends Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tisDialogOpen: false,\n\t\t}\n\n\t\tthis.handleInput = this.handleInput.bind(this);\n\t\tthis.handleSubmit = this.handleSubmit.bind(this);\n\t\tthis.handleDialogClose = this.handleDialogClose.bind(this);\n\t}\n\n\tcomponentWillUnmount() {\n\t\tthis.props.AuthStore.resetStore();\n\t}\n\n\thandleInput(e) {\n\t\tconst { AuthStore } = this.props;\n\t\tconst { name, value } = e.target;\n\t\tAuthStore.setFieldValue(name, value);\n\t}\n\t\n\tasync handleSubmit(e) {\n\t\te.preventDefault();\n\n\t\tconst success = await this.props.AuthStore.newPass();\n\t\tif (success) {\n\t\t\tthis.setState({ isDialogOpen: true });\n\t\t}\n\t}\n\n\thandleDialogClose(e, reason) {\n\t\tthis.setState({ isDialogOpen: false });\n\t\tthis.props.history.push('/auth/login');\n\t}\n\t\n\trender() {\n\t\tconst { fields, errors } = this.props.AuthStore;\n\t\tconst { classes } = this.props;\n\t\tconst { isLoading, isDialogOpen } = this.state;\n\t\treturn (\n\t\t\t<React.Fragment>\n\n\t\t\t\t<Dialog\n\t\t\t\t\t\topen={isDialogOpen}\n\t\t\t\t\t\tonClose={this.handleDialogClose}\n\t\t\t\t\t\taria-labelledby=\"alert-dialog-title\"\n\t\t\t\t\t\taria-describedby=\"alert-dialog-description\"\n\t\t\t\t>\n\t\t\t\t\t\t<DialogTitle id=\"alert-dialog-title\">{\"Registration successfull\"}</DialogTitle>\n\t\t\t\t\t\t<DialogContent>\n\t\t\t\t\t\t\t<DialogContentText id=\"alert-dialog-description\">\n\t\t\t\t\t\t\t\tYour password has changed, please login.\n\t\t\t\t\t\t\t</DialogContentText>\n\t\t\t\t\t\t</DialogContent>\n\t\t\t\t\t\t<DialogActions>\n\t\t\t\t\t\t\t<Button  onClick={this.handleDialogClose} color=\"primary\" autoFocus>\n\t\t\t\t\t\t\t\tok\n\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t</DialogActions>\n\t\t\t\t</Dialog>\n\n\t\t\t\t<Paper className={classes.paper} elevation={1}>\n\t\t\t\t\t<Typography variant=\"h5\" gutterBottom>\n\t\t\t\t\t\tPassword Recovery\n\t\t\t\t\t</Typography>\n\n\t\t\t\t\t<FormControl error={!!errors.password} margin=\"dense\">\n\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"password\">Password</InputLabel>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tid=\"password\"\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\t\t\t\tvalue={fields.password}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormHelperText>{errors.password}</FormHelperText>\n\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t\t\t<FormControl error={!!errors.confirmPassword} margin=\"dense\">\n\t\t\t\t\t\t\t\t<InputLabel htmlFor=\"confirmPassword\">Confirm password</InputLabel>\n\t\t\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\t\t\tid=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\tname=\"confirmPassword\"\n\t\t\t\t\t\t\t\t\tvalue={fields.confirmPassword}\n\t\t\t\t\t\t\t\t\tonChange={this.handleInput}\n\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t<FormHelperText>{errors.confirmPassword}</FormHelperText>\n\t\t\t\t\t\t\t</FormControl>\n\n\t\t\t\t\t<Button \n\t\t\t\t\t\tclassName={classes.button}\n\t\t\t\t\t\tonClick={this.handleSubmit}\n\t\t\t\t\t\tvariant=\"contained\"\n\t\t\t\t\t\tcolor=\"primary\"\n\t\t\t\t\t\tdisabled={isLoading}\n\t\t\t\t\t>\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</Paper>\n\n\t\t\t</React.Fragment>\n\t\t);\n\t}\n}\n\nexport default withStyles(styles)(NewPass);","import React, {Component} from 'react';\nimport { Redirect } from 'react-router-dom';\nimport {Switch, Route} from 'react-router-dom';\nimport Login from './Login';\nimport Registration from './Registration';\nimport LostPass from './LostPass';\nimport NewPass from './NewPass';\nimport { inject, observer } from 'mobx-react';\n\n@inject('SelfStore') @observer\nclass Auth extends Component {\n\trender() {\n        const { SelfStore, match } = this.props;\n        if (SelfStore.self) {\n            return <Redirect to=\"/\"/>;\n        } else {\n            return (\n                <Switch>\n                    <Route exact path={`${match.path}/login`} component={Login}/>\n                    <Route exact path={`${match.path}/registration`} component={Registration}/>\n                    <Route exact path={`${match.path}/lostpass`} component={LostPass}/>\n                    <Route exact path={`${match.path}/lostpass/newpass`} component={NewPass}/>\n                    <Redirect to=\"/auth/login\"/>\n                </Switch>\n            );\n        }\n    }\n}\n\nexport default Auth;","import React, {Component} from 'react';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport not_found from '../img/not_found.jpg';\n\nconst styles = theme => ({\nnotFound: {\n\t\tpaddingTop: 70,\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center'\n\t},\n});\n\nclass NotFound extends Component {\n\n\trender() {\n\t\tconst { classes } = this.props;\n        return (<Grid className={classes.notFound}><img src={not_found} alt=\"Page not found\"/></Grid>)\n    }\n\n}\n\nexport default withStyles(styles)(NotFound);","import React, { Component } from 'react';\nimport { Paper, Grid, Avatar, Typography, withStyles } from '@material-ui/core';\nimport { inject, observer } from 'mobx-react';\nimport NotFound from \"./NotFound\";\n\nconst styles = theme => ({\n\tlayout: {\n\t\twidth: 'auto',\n\t\tmarginLeft: theme.spacing.unit * 2,\n\t\tmarginRight: theme.spacing.unit * 2,\n\t\t[theme.breakpoints.up(600 + theme.spacing.unit * 2 * 2)]: {\n\t\t\twidth: 600,\n\t\t\tmarginLeft: 'auto',\n\t\t\tmarginRight: 'auto',\n\t\t}\n\t},\n\tpaper: {\n\t\tmarginTop: theme.spacing.unit * 3,\n\t\tmarginBottom: theme.spacing.unit * 3,\n\t\tpadding: theme.spacing.unit * 2\n\t},\n\tcontainer : {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing.unit,\n\t\tbackgroundColor: theme.palette.grey,\n\t\twidth: 256,\n\t\theight: 256\n\t},\n\tavatarContainer : {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center'\n\t},\n\tmainUserInfo: {\n\t\tmargin: theme.spacing.unit\n\t},\n\teditButton: {\n\t\tmarginLeft: theme.spacing.unit,\n\t},\n\t\n});\n\n@inject('UserStore') @observer\nclass User extends Component {\n\n\tcomponentWillMount(){\n        const { UserStore } = this.props;\n        UserStore.pullUser(this.props.match.params.username);\n\t}\n\n\trenderAvatar(user, classes) {\n\t\tif (user.avatar) {\n\t\t\treturn <Avatar className={classes.avatar} src={`${process.env.REACT_APP_ERL_API_URL}${user.avatar}`} />;\n\t\t} else {\n\t\t\treturn (\n\t\t\t\t<Avatar className={classes.avatar} src={user.avatar} >\n\t\t\t\t\t{`${user.fname.charAt(0)}${user.lname.charAt(0)}`}\n\t\t\t\t</Avatar>\n\t\t\t);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { classes } = this.props;\n\t\tconst { user } = this.props.UserStore;\n\t\t\n\t\tif (user === undefined) {\n\t\t    return null;\n\t\t}\n\n\t\tif (user === null) {\n\t\t\treturn (<NotFound></NotFound>);\n\t\t}\n\n\t\treturn (\n\t\t\t<main className={classes.layout}>\n\t\t\t\t<Paper className={classes.paper}>\n\t\t\t\t\t<Grid className={classes.container} container spacing={16}>\n\t\t\t\t\t\t<Grid className={classes.avatarContainer} item>\n\t\t\t\t\t\t\t{ this.renderAvatar(user, classes) }\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t\t<Grid item className={classes.mainUserInfo}>\n\t\t\t\t\t\t\t<Typography variant=\"h6\">\n                                {user.fname} {user.lname}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t<Typography variant=\"subtitle2\" color=\"textSecondary\" gutterBottom>\n                                {user.uname}\n\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t{\n\t\t\t\t\t\t\t\tuser.bio &&\n\t\t\t\t\t\t\t\t<Typography variant=\"subtitle1\" paragraph>\n\t\t\t\t\t\t\t\t\t{user.bio}\n\t\t\t\t\t\t\t\t</Typography>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</Grid>\n\t\t\t\t\t</Grid>\n\t\t\t\t</Paper>\n\t\t    </main>\t  \n\t\t);\n\t}\n};\n\n\nexport default withStyles(styles)(User);","import React, {Component} from 'react';\nimport { inject, observer } from 'mobx-react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport { Typography, Card, CardActionArea, CardMedia, CardContent, FormControl, InputLabel, Input, InputAdornment, Icon, Button, Select, Chip, MenuItem, ListItemText, Checkbox, CircularProgress, ButtonBase} from '@material-ui/core';\nimport { Link } from 'react-router-dom';\nimport { withNamespaces } from 'react-i18next';\n\nconst styles = theme => ({\n    layout: {\n        marginLeft: 'auto',\n        marginRight: 'auto',\n        marginTop: theme.spacing.unit * 2,\n\t\tmarginBottom: theme.spacing.unit * 2,\n    },\n    container: {\n        marginTop: theme.spacing.unit * 2,\n        marginBottom: theme.spacing.unit * 2\n    },\n    filtersContainer: {\n        marginTop: theme.spacing.unit * 2,\n    },\n    filterItem: {\n        margin: theme.spacing.unit * 2\n    },\n    card: {\n        width: 250,\n        margin: theme.spacing.unit\n    },\n    formControl: {\n        minWidth: 120,\n        maxWidth: 300,\n    },\n    chips: {\n        display: 'flex',\n        flexWrap: 'wrap',\n    },\n    chip: {\n        margin: theme.spacing.unit / 4,\n    },\n    media: {\n        objectFit: 'cover',\n    },\n    backButton: {\n        margin: theme.spacing.unit\n    },\n    yearInput: {\n        textAlign: 'center'\n    }\n});\n\nconst ITEM_HEIGHT = 48;\nconst ITEM_PADDING_TOP = 8;\nconst MenuProps = {\n  PaperProps: {\n    style: {\n      maxHeight: ITEM_HEIGHT * 4.5 + ITEM_PADDING_TOP,\n      width: 250,\n    },\n  },\n};\n\nconst _genres = {\n    \"28\": \"action\",\n    \"12\": \"adventure\",\n    \"16\": \"animation\",\n    \"35\": \"comedy\",\n    \"80\": \"crime\",\n    \"99\": \"documentary\",\n    \"18\": \"drama\",\n    \"10751\": \"family\",\n    \"14\": \"fantasy\",\n    \"36\": \"history\",\n    \"27\": \"horror\",\n    \"10402\": \"music\",\n    \"9648\": \"mystery\",\n    \"10749\": \"romance\",\n    \"878\": \"scienceFiction\",\n    \"10770\": \"tvMovie\",\n    \"53\": \"thriller\",\n    \"10752\": \"war\",\n    \"37\": \"western\"\n};\n\n@withNamespaces()\n@inject('LibraryStore') @observer\nclass Library extends Component {\n    constructor(props) {\n\t\tsuper(props);\n        this.state = {\n            queryString: \"\"\n        }\n        this.handleSearchFormSubmit = this.handleSearchFormSubmit.bind(this);\n        this.handleGenreSelect = this.handleGenreSelect.bind(this);\n        this.renderGenreSelectValues = this.renderGenreSelectValues.bind(this);\n        this.deleteSelectedGenre = this.deleteSelectedGenre.bind(this);\n        this.handleFilterChange = this.handleFilterChange.bind(this);\n        this.disableSearchMode = this.disableSearchMode.bind(this);\n        this.renderHelpers = this.renderHelpers.bind(this);\n        this.renderMovies = this.renderMovies.bind(this);\n        this.renderLoadMoreButton = this.renderLoadMoreButton.bind(this);\n        this.fetchMovies = this.fetchMovies.bind(this);\n        this.handleMovieSearch = this.handleMovieSearch.bind(this);\n        this.handleLoadMore = this.handleLoadMore.bind(this);\n        this.handleMovieClick = this.handleMovieClick.bind(this);\n        this.searchField = React.createRef();\n    }\n\n    componentDidMount() {\n        const { LibraryStore } = this.props;\n\n        if (!LibraryStore.movies) {\n            LibraryStore.fetchMovies();\n        }\n    }\n\n    handleMovieClick = movieIndex => (e) => {\n        const { LibraryStore } = this.props;\n        LibraryStore._lastSelectedMovie = movieIndex;\n    }\n    \n    handleSearchFormSubmit(e) {\n        e.preventDefault();\n        \n        const { LibraryStore } = this.props;\n        const { queryString } = this.state;\n\n        if (!queryString || LibraryStore.isLoading) return;\n\n        LibraryStore.resetMovies();\n        LibraryStore.setSearchMode(true);\n        LibraryStore.setCurrentQuery(queryString);\n\n        this.searchField.current.focus();\n        this.searchField.current.setSelectionRange(0, this.state.queryString.length);\n\n        this.setState({ genres: [] });\n        this.handleMovieSearch();\n    }\n\n    fetchMovies(page = 1) {\n        this.props.LibraryStore.fetchMovies(page);\n    }\n\n    handleMovieSearch(page = 1) {\n        this.props.LibraryStore.fetchSearchResults(page);\n    }\n    \n    handleLoadMore(currentPage) {\n        if (this.props.LibraryStore.searchMode) {\n            this.handleMovieSearch(currentPage + 1)\n        } else {\n            this.fetchMovies(currentPage + 1);\n        }\n    }\n\n    disableSearchMode() {\n        const { LibraryStore } = this.props;\n\n        LibraryStore.setSearchMode(false);\n        LibraryStore.setCurrentQuery(undefined);\n        LibraryStore.resetMovies();\n\n        this.setState({ queryString: \"\" });\n        this.searchField.current.focus();\n\n        this.fetchMovies();\n    }\n\n    handleFilterChange(e) {\n        const { name, value } = e.target;\n        this.props.LibraryStore.setFilter(name, value);\n        this.fetchMovies();\n    }\n\n    handleGenreSelect(e) {\n        const { LibraryStore } = this.props;\n\n        LibraryStore.setGenres(e.target.value);\n        this.fetchMovies();\n    }\n\n\n    deleteSelectedGenre = genreId => () => {\n        const { LibraryStore } = this.props;\n\n        LibraryStore.deleteGenre(genreId);\n        this.fetchMovies();\n    }\n\n    renderGenreSelectValues(selectedGenres) {\n        const { classes, t } = this.props;\n        const { searchMode } = this.props.LibraryStore;\n\n        return (\n            <div className={classes.chips}>\n                {selectedGenres.map(genreId => (\n                    <Chip\n                        key={genreId}\n                        label={t('library:' + _genres[genreId])}\n                        className={classes.chip}\n                        onDelete={searchMode ? undefined : this.deleteSelectedGenre(genreId)}\n                    />\n                ))}\n            </div>\n        );\n    }\n\n    renderHelpers(movies) {\n        const { searchMode, currentQuery } = this.props.LibraryStore;\n        if (movies === null) {\n            return (\n                <Grid item>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                        Error occured, try again\n                    </Typography>\n                </Grid>\n            );\n        } else if (!searchMode && movies && movies.length === 0) {\n            return (\n                <Grid item>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                        No results found\n                    </Typography>\n                </Grid>\n            );\n        } else if (searchMode && movies && movies.length === 0) {\n            return (\n                <Grid item>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                        No results found for \"{currentQuery}\"\n                    </Typography>\n                </Grid>\n            );\n        } else if (searchMode && movies) {\n            return (\n                <Grid item>\n                    <Typography variant=\"subtitle2\" color=\"textSecondary\">\n                        Search results for \"{currentQuery}\"\n                    </Typography>\n                </Grid>\n            );\n        }\n    }\n\n    renderYearOptions(grater = true) {\n        const options = [];\n        let dateTemplate;\n\n        if (grater) {\n            dateTemplate = '-01-01';\n        } else {\n            dateTemplate = '-12-31'\n        }\n\n        for (let year = 2026; year >= 1874; year--) {\n            const fullDate = year + dateTemplate\n            options.push(\n                <MenuItem key={year} value={fullDate}>{year}</MenuItem>\n            );\n        }\n        return options;\n    }\n\n    renderMovieRating(movie) {\n        const { t } = this.props;\n        if (movie.vote_count > 0) {\n            return (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    { `${t('library:rating')} - ${movie.vote_average}/10` }\n                </Typography>\n            );\n        } else {\n            return (\n                <Typography variant=\"caption\" color=\"textSecondary\">\n                    {t('library:noRating')}\n                </Typography>\n            );\n        }\n    }\n    \n    renderMovies(movies) {\n        if (!movies) return;\n        const { classes, t } = this.props;\n        return movies.map((movie, i) => (\n            <Grid item key={movie.id}>\n                <Card className={classes.card}>\n                    <CardActionArea component={Link} to={`/movie/${movie.id}`} onClick={this.handleMovieClick(i)}>\n                        <CardMedia\n                            component=\"img\"\n                            className={classes.media}\n                            alt={movie.title}\n                            height=\"375\"\n                            image={movie.poster_path || 'http://www.theprintworks.com/wp-content/themes/psBella/assets/img/film-poster-placeholder.png'}\n                            title={movie.title}\n                        />\n                        <CardContent>\n                            <Typography variant=\"subtitle2\" noWrap color={ movie.watched_films_count > 0 ? 'textSecondary' : 'textPrimary' }>\n                                {movie.title}\n                            </Typography>\n                            <Typography variant=\"subtitle2\" gutterBottom color=\"textSecondary\">\n                                { movie.release_date.split(\"-\")[0] || t('library:releaseDataUnknown') }\n                            </Typography>\n                            { this.renderMovieRating(movie) }\n                        </CardContent>\n                    </CardActionArea>\n                </Card>\n            </Grid>\n        ));\n    }\n\n    renderLoadMoreButton() {\n        const { classes, LibraryStore, t } = this.props;\n        const { isLoading, movies, currentPage, totalPages } = LibraryStore;\n\n        if (isLoading) {\n            return (\n                <Grid container className={classes.container} justify=\"center\">\n                    <Grid item>\n                        <CircularProgress/>\n                    </Grid>\n                </Grid>\n            );\n        } else if (movies && !isLoading && currentPage < totalPages) {\n            return (\n                <Grid container className={classes.container} justify=\"center\">\n                    <Grid item>\n                        <Button onClick={() => this.handleLoadMore(currentPage)} variant=\"outlined\" size=\"large\" color=\"primary\">\n                            { t('library:loadMore') }\n                        </Button>\n                    </Grid>\n                </Grid>\n            );\n        }\n    }\n\n    render() {\n        const { queryString } = this.state;\n        const { classes, t,  LibraryStore } = this.props;\n        const { isLoading, movies, filters, searchMode } = LibraryStore;\n        return (\n            <main>\n                <Grid container className={classes.layout} direction=\"column\">\n\n                    <Grid container className={classes.filtersContainer} wrap=\"wrap\" justify=\"space-around\" alignItems=\"flex-end\">\n\n                        <Grid item>\n                            <Grid container justify=\"center\" alignItems=\"flex-end\">\n                                <Grid item className={classes.filterItem}>\n                                    <FormControl disabled={searchMode} className={classes.formControl}>\n                                        <InputLabel htmlFor=\"sort_by\">{t('library:sortBy')}</InputLabel>\n                                        <Select\n                                            value={filters.sort_by}\n                                            onChange={this.handleFilterChange}\n                                            input={<Input name=\"sort_by\" id=\"sort_by\" />}\n                                        >\n                                            <MenuItem value={\"popularity.asc\"}>{t('library:popularityAscending')}</MenuItem>\n                                            <MenuItem value={\"popularity.desc\"}>{t('library:popularityDescending')}</MenuItem>\n                                            <MenuItem value={\"vote_average.asc\"}>{t('library:ratingAscending')}</MenuItem>\n                                            <MenuItem value={\"vote_average.desc\"}>{t('library:ratingDescending')}</MenuItem>\n                                            <MenuItem value={\"primary_release_date.asc\"}>{t('library:releaseDateAscending')}</MenuItem>\n                                            <MenuItem value={\"primary_release_date.desc\"}>{t('library:releaseDateDescending')}</MenuItem>\n                                            <MenuItem value={\"revenue.asc\"}>{t('library:revenueAscending')}</MenuItem>\n                                            <MenuItem value={\"revenue.desc\"}>{t('library:revenueDescending')}</MenuItem>\n                                            <MenuItem value={\"original_title.asc\"}>{t('library:originalTitleAscending')}</MenuItem>\n                                            <MenuItem value={\"original_title.desc\"}>{t('library:originalTitleDescending')}</MenuItem>\n                                            \n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid item className={classes.filterItem}>\n                                    <FormControl disabled={searchMode} className={classes.formControl}>\n                                        <InputLabel htmlFor=\"select-multiple-chip\">{t('library:genres')}</InputLabel>\n                                        <Select\n                                            multiple\n                                            value={filters.with_genres}\n                                            onChange={this.handleGenreSelect}\n                                            input={<Input id=\"select-multiple-chip\" />}\n                                            renderValue={this.renderGenreSelectValues}\n                                            MenuProps={MenuProps}\n                                        >\n                                        {\n                                            Object.keys(_genres).map((genreId, index) => (\n                                            <MenuItem key={index} value={genreId}>\n                                                <Checkbox checked={filters.with_genres.includes(genreId)} />\n                                                <ListItemText primary={t('library:' + _genres[genreId])} />\n                                            </MenuItem>\n                                            ))\n                                        }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                                <Grid item className={classes.filterItem}>\n                                    <Grid container spacing={8}>\n                                        <Grid item>\n                                            <FormControl disabled={searchMode} className={classes.formControl}>\n                                                <InputLabel htmlFor=\"primary_release_date_gte\">{t('library:releaseYear')}</InputLabel>\n                                                <Select\n                                                    value={filters[\"primary_release_date.gte\"]}\n                                                    onChange={this.handleFilterChange}\n                                                    displayEmpty\n                                                    input={\n                                                        <Input\n                                                            id=\"primary_release_date_gte\"\n                                                            name=\"primary_release_date.gte\"\n                                                            startAdornment = {\n                                                                <InputAdornment position=\"start\">\n                                                                    {\">\"}\n                                                                </InputAdornment>\n                                                            }\n                                                        />\n                                                    }\n                                                >\n                                                    <MenuItem value=\"\">\n                                                        <em>{t('library:any')}</em>\n                                                    </MenuItem>\n                                                    { this.renderYearOptions(true) }\n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n\n                                        <Grid item>\n                                            <FormControl disabled={searchMode} className={classes.formControl}>\n                                                <InputLabel htmlFor=\"primary_release_date_lte\">{t('library:releaseYear')}</InputLabel>\n                                                <Select\n                                                    value={filters[\"primary_release_date.lte\"]}\n                                                    onChange={this.handleFilterChange}\n                                                    displayEmpty\n                                                    input={\n                                                        <Input\n                                                            id=\"primary_release_date_lte\"\n                                                            name=\"primary_release_date.lte\"\n                                                            startAdornment={\n                                                                <InputAdornment position=\"start\">\n                                                                    {\"<\"}\n                                                                </InputAdornment>\n                                                            }\n                                                        />\n                                                    }\n                                                >\n                                                    <MenuItem value=\"\">\n                                                        <em>{t('library:any')}</em>\n                                                    </MenuItem>\n                                                    { this.renderYearOptions(false) }\n                                                </Select>\n                                            </FormControl>\n                                        </Grid>\n                                    </Grid>\n                                </Grid>\n\n                                <Grid item className={classes.filterItem}>\n                                    <FormControl disabled={searchMode} className={classes.formControl}>\n                                        <InputLabel shrink  htmlFor=\"vote_average\">{t('library:rating')}</InputLabel>\n                                        <Select\n                                            value={filters[\"vote_average.gte\"]}\n                                            onChange={this.handleFilterChange}\n                                            displayEmpty\n                                            input={<Input name=\"vote_average.gte\" id=\"vote_average\" />}\n                                        >\n                                            <MenuItem value=\"\">\n                                                <em>{t('library:any')}</em>\n                                            </MenuItem>\n                                        {\n                                            [\"1+\",\"2+\",\"3+\",\"4+\",\"5+\",\"6+\",\"7+\",\"8+\",\"9+\"].map((value, index) => (\n                                                <MenuItem key={index} value={value.charAt(0)}>{value}</MenuItem>\n                                            ))\n                                        }\n                                        </Select>\n                                    </FormControl>\n                                </Grid>\n\n                            </Grid>\n                        </Grid>\n\n                        <Grid item className={classes.filterItem}>\n                            <form onSubmit={this.handleSearchFormSubmit}>\n                                <FormControl>\n                                    <Input\n                                        id=\"search-field\"\n                                        type=\"text\"\n                                        name=\"queryString\"\n                                        placeholder={t('library:search') + '...'}\n                                        value={queryString}\n                                        startAdornment={\n                                            <InputAdornment position=\"start\">\n                                                <Icon>search</Icon>\n                                            </InputAdornment>\n                                        }\n                                        onChange={(e) => this.setState({queryString: e.target.value})}\n                                        inputRef={this.searchField}\n                                    />\n                                </FormControl>\n                            </form>\n                        </Grid>\n\n                    </Grid>\n                    \n                    <Grid container className={classes.filtersContainer} wrap=\"wrap\" justify=\"center\" alignItems=\"center\" zeroMinWidth>\n                        { this.renderHelpers(movies, isLoading) }\n                        {\n                            searchMode && !isLoading &&\n                            <Grid item className={classes.backButton}>\n                                <ButtonBase focusRipple onClick={this.disableSearchMode}>\n                                    <Icon color=\"action\">close</Icon>\n                                </ButtonBase>\n                            </Grid>\n                        }\n                    </Grid>\n\n                    <Grid container className={classes.container} wrap=\"wrap\" justify=\"center\" zeroMinWidth>\n                        { this.renderMovies(movies) }\n                    </Grid>\n\n                    { this.renderLoadMoreButton() }\n\n                </Grid>\n            </main>\n        );\n    }\n}\n\nLibrary.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withStyles(styles)(Library);","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react';\nimport imgHelpers from '../../helpers/imgHelpers';\nimport { Paper, List, ListItem, ListSubheader, ListItemIcon, Icon, ListItemText, withStyles, Snackbar, IconButton } from '@material-ui/core';\nimport { withNamespaces } from 'react-i18next';\n\nconst styles = theme => ({\n    paper: {\n\t\tmarginTop: theme.spacing.unit,\n\t\tmarginBottom: theme.spacing.unit,\n\t\tpadding: 0\n\t},\n\tavatarContainer : {\n\t\tdisplay: 'flex',\n\t\tjustifyContent: 'center'\n\t},\n\tavatar: {\n\t\tmargin: theme.spacing.unit,\n\t\tbackgroundColor: theme.palette.grey,\n\t\twidth: 256,\n\t\theight: 256\n\t}\n});\n\n@withNamespaces()\n@inject('SelfStore') @observer\nclass PictureSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            error: '',\n            snackbarOpen: false\n        }\n        this.onFileChange = this.onFileChange.bind(this);\n        this.importPictureFromSocial = this.importPictureFromSocial.bind(this);\n        this.deleteCurrentPicture = this.deleteCurrentPicture.bind(this);\n        this.handleSnackbarClose = this.handleSnackbarClose.bind(this);\n\t\tthis.fileInput = React.createRef();\n    }\n\n    async onFileChange(e) {\n\t\tconst { SelfStore, t } = this.props;\n\n\t\tconst file = e.target.files[0];\n\t\te.target.value = '';\n\n\t\tif (file && file.size < 3000000) {\n\t\t\ttry {\n\t\t\t\tconst src = await imgHelpers.imgFileToBase64(file);\n                const result = await SelfStore.updateProfile('avatar', src);\n                if (!result.success) {\n                    this.setState({\n                        snackbarOpen: true,\n                        error: result.error\n                    });\n                }\n\t\t\t} catch (e) {\n                this.setState({\n                    error: t('settingsPage:imageProcessingFailed'),\n                    snackbarOpen: true\n                });\n\t\t\t\tconsole.error(e);\n\t\t\t}\n\t\t} else {\n            this.setState({\n                error: t('settingsPage:tooBigFile'),\n                snackbarOpen: true\n            });\n\t\t}\n\t}\n    \n    async importPictureFromSocial(e) {\n\t\tconst { SelfStore } = this.props;\n\t\tSelfStore.importPictureFromSocial();\n    }\n    \n    async deleteCurrentPicture(e) {\n        const { SelfStore } = this.props;\n        if (SelfStore.self.avatar) {\n            await SelfStore.updateProfile('avatar', '');\n        }\n    }\n    \n    handleSnackbarClose(e, reason) {\n\t\tthis.setState({ snackbarOpen: false });\n    }\n    \n    renderSnackBar() {\n        const { error, snackbarOpen } = this.state;\n\t\treturn (\n\t\t\t<Snackbar\n\t\t\t\tanchorOrigin={{\n\t\t\t\t\tvertical: 'bottom',\n\t\t\t\t\thorizontal: 'left',\n\t\t\t\t}}\n\t\t\t\topen={snackbarOpen}\n\t\t\t\tautoHideDuration={6000}\n\t\t\t\tonClose={this.handleSnackbarClose}\n\t\t\t\tmessage={<span>Error: {error}</span>}\n\t\t\t\taction={[\n\t\t\t\t\t<IconButton\n\t\t\t\t\t\tkey=\"close\"\n\t\t\t\t\t\taria-label=\"Close\"\n\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\tonClick={this.handleSnackbarClose}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Icon>\n\t\t\t\t\t\t\tclose\n\t\t\t\t\t\t</Icon>\n\t\t\t\t\t</IconButton>\n\t\t\t\t]}\n\t\t\t/>\n\t\t)\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { self } = this.props.SelfStore;\n        return (\n            <React.Fragment>\n                { this.renderSnackBar() }\n                <Paper className={classes.paper}>\n                    <List disablePadding subheader={\n                        <ListSubheader disableSticky color=\"primary\">{t('settingsPage:avatar')}</ListSubheader>\n                    }>\n                        <ListItem divider className={classes.avatarContainer}>\n                            { imgHelpers.renderAvatar(self, classes) }\n                        </ListItem>\n                        <ListItem divider button onClick={() => { this.fileInput.current.click() }}>\n                            <ListItemIcon>\n                                <Icon>\n                                    cloud_upload\n                                </Icon>\n                            </ListItemIcon>\n                            <ListItemText primary={t('settingsPage:uploadPicture')}/>\n                        </ListItem>\n                        {\n                            self.social_provider &&\n                            <ListItem divider button onClick={this.importPictureFromSocial.bind(this)}>\n                                <ListItemIcon>\n                                    <Icon>\n                                        get_app\n                                    </Icon>\n                                </ListItemIcon>\n                                <ListItemText primary={t('settingsPage:importPicture') + ' ' + self.social_provider}/>\n                            </ListItem>\n                        }\n                        <ListItem button onClick={this.deleteCurrentPicture.bind(this)}>\n                            <ListItemIcon>\n                                <Icon>\n                                    delete\n                                </Icon>\n                            </ListItemIcon>\n                            <ListItemText primary={t('settingsPage:deletePicture')}/>\n                        </ListItem>\n                    </List>\n                    <input\n                        style={{ 'display': 'none' }}\n                        onChange={this.onFileChange}\n                        ref={this.fileInput}\n                        type=\"file\"\n                        accept=\"image/*\"\n                    />\n                </Paper>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withStyles(styles)(PictureSection);\n","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react';\nimport { Paper, List, ListItem, ListSubheader, ListItemText, Dialog, DialogTitle, DialogContent, FormControl, InputLabel, Input, FormHelperText, DialogActions, Button, CircularProgress, withStyles } from '@material-ui/core';\nimport simpleValidator from '../../helpers/simpleValidator';\nimport { withNamespaces } from 'react-i18next';\n\nconst styles = theme => ({\n    paper: {\n\t\tmarginTop: theme.spacing.unit,\n\t\tmarginBottom: theme.spacing.unit,\n\t\tpadding: 0\n    },\n    wordBreak: {\n        wordBreak: 'break-word'\n    }\n});\n\n\n@withNamespaces()\n@inject('SelfStore') @observer\nclass ProfileSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n\t\t\tisDialogOpen: false,\n\t\t\tselectedField: \"fname\",\n\t\t\tinputValue: '',\n\t\t\tinputError: '',\n        };\n        this.handleItemClick = this.handleItemClick.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.saveFieldValue = this.saveFieldValue.bind(this);\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n        this.saveFieldValue();\n    }\n\n    handleItemClick(e) {\n\t\tconst { self } = this.props.SelfStore;\n\t\tconst selectedField = e.currentTarget.id;\n\n\t\tthis.setState({\n\t\t\tselectedField,\n            isDialogOpen: true,\n\t\t\tinputValue: self[selectedField],\n            inputError: ''\n\t\t});\n    }\n\n    handleInput(e) {\n\t\tthis.setState({\n\t\t\tinputValue: e.target.value,\n\t\t\tinputError: ''\n\t\t});\n    }\n    \n\n    handleDialogClose(e, reason) {\n        this.setState({ isDialogOpen: false });\n    }\n    \n    isValidField(fieldName, value) {\n        const result = simpleValidator(fieldName, value);\n        if (result.isValid) {\n            return true;\n        } else {\n            this.setState({ inputError: result.error });\n            return false;\n        }\n    }\n\n    async saveFieldValue(e) {\n\t\tconst { self } = this.props.SelfStore;\n\t\tlet { selectedField, inputValue } = this.state;\n\n\t\tif (inputValue === null) {\n\t\t\treturn;\n\t\t}\n\n\t\tinputValue = inputValue.trim();\n\t\tif (inputValue === self[selectedField]) {\n\t\t\tthis.setState({ isDialogOpen: false });\n\t\t\treturn;\n        }\n        \n        if (this.isValidField(selectedField, inputValue)) {\n            this.setState({ isLoading: true });\n            const result = await this.props.SelfStore.updateProfile(selectedField, inputValue);\n            if (result.success) {\n                this.setState({\n                    isLoading: false,\n                    isDialogOpen: false\n                });\n            } else {\n                this.setState({\n                    isLoading: false,\n                    inputError: result.error\n                });\n            }\n        }\n\t}\n    \n    renderInputDialog(t) {\n        const { isLoading, isDialogOpen, selectedField, inputError, inputValue } = this.state;\n        return (\n\t\t\t<Dialog\n\t\t\t\topen={isDialogOpen}\n\t\t\t\tonClose={this.handleDialogClose}\n\t\t\t\taria-labelledby=\"form-dialog-title\"\n\t\t\t\tfullWidth\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"form-dialog-title\">\n                    {t('settingsPage:changeField')} {t('settingsPage:' + selectedField).toLowerCase()}\n                    </DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<form onSubmit={this.handleFormSubmit.bind(this)}>\n                        <FormControl error={!!inputError} fullWidth>\n                            <InputLabel htmlFor={selectedField}>{t('settingsPage:' + selectedField)}</InputLabel>\n                            <Input\n                                id={selectedField}\n                                type=\"text\"\n                                name={selectedField}\n                                value={inputValue || ''}\n                                autoFocus\n                                onChange={this.handleInput}\n                                multiline={selectedField === 'bio'}\n                            />\n                            <FormHelperText>{inputError}</FormHelperText>\n                        </FormControl>\n\t\t\t\t\t</form>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={this.handleDialogClose} color=\"primary\">\n                        {t('settingsPage:cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button disabled={isLoading} onClick={this.saveFieldValue} color=\"primary\">\n\t\t\t\t\t\t{isLoading ? <CircularProgress size={18}/> : t('settingsPage:save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t);\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { self } = this.props.SelfStore;\n        return (\n            <React.Fragment>\n                { this.renderInputDialog(t) }\n                <Paper className={classes.paper}>\n                    <List disablePadding subheader={\n                        <ListSubheader disableSticky color=\"primary\">{t('settingsPage:profile')}</ListSubheader>\n                    }>\n                        <ListItem id=\"fname\" button divider onClick={this.handleItemClick}>\n                            <ListItemText\n                                className={classes.wordBreak}\n                                primary={self.fname || t('settingsPage:none')}\n                                secondary={t('settingsPage:fname')}\n                            />\n                        </ListItem>\n                        <ListItem id=\"lname\" button divider onClick={this.handleItemClick}>\n                            <ListItemText\n                                className={classes.wordBreak}\n                                primary={self.lname || t('settingsPage:none')}\n                                secondary={t('settingsPage:lname')}\n                            />\n                        </ListItem>\n                        <ListItem id=\"uname\" button divider onClick={this.handleItemClick}>\n                            <ListItemText\n                                className={classes.wordBreak}\n                                primary={self.uname}\n                                secondary={t('settingsPage:uname')}\n                            />\n                        </ListItem>\n                        <ListItem id=\"bio\" button onClick={this.handleItemClick}>\n                            <ListItemText\n                                className={classes.wordBreak}\n                                primary={self.bio || t('settingsPage:none')}\n                                secondary={t('settingsPage:bio')}\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withStyles(styles)(ProfileSection);\n","import * as EmailValidator from 'email-validator';\n\nexport default (fieldName, value) => {\n    const result = {\n        isValid: true,\n        error: ''\n    }\n\n    if (fieldName === \"uname\") {\n        if (value.length < 6){\n            result.error = \"Username is too short.\";\n            result.isValid = false;\n        } else if (value.length > 16) {\n            result.error = \"Username is too long\";\n            result.isValid = false;\n        }\n    } else if (fieldName === \"fname\"){\n        if (value.length < 1){\n            result.error = \"First name is too short.\";\n            result.isValid = false;\n        } else if (value.length > 50) {\n            result.error = \"First name is too long\";\n            result.isValid = false;\n        }\n    } else if (fieldName === \"lname\"){\n        if (value.length < 1){\n            result.error = \"Last name is too short.\";\n            result.isValid = false;\n        } else if (value.length > 50) {\n           result.error = \"Last name is too long\";\n           result.isValid = false;\n        }\n    } else if (fieldName === \"bio\" && value.length > 200) {\n        result.error = \"Bio is too long.\";\n        result.isValid = false;\n    } else if (fieldName === \"email\" && !EmailValidator.validate(value)) {\n        result.error = \"Email is invalid.\";\n        result.isValid = false;\n    }\n\n    return result;\n}","import React, { Component } from 'react'\nimport { inject, observer } from 'mobx-react';\nimport { Paper, withStyles, List, ListItem, ListItemText, ListSubheader, Dialog, DialogTitle, DialogContent, FormControl, InputLabel, Input, FormHelperText, DialogActions, Button, CircularProgress, DialogContentText } from '@material-ui/core';\nimport { validate } from 'email-validator';\nimport { withNamespaces } from 'react-i18next';\n\nconst styles = theme => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing.unit,\n\t\tmarginBottom: theme.spacing.unit,\n\t\tpadding: 0\n    }\n});\n\n@withNamespaces()\n@inject('SelfStore') @observer\nclass AccountSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            emailDialogOpen: false,\n            passwordDialogOpen: false,\n            email: '',\n            old_password: '',\n            new_password: '',\n            confirm: '',\n            errors: {}\n        }\n        this.handleItemClick = this.handleItemClick.bind(this);\n        this.handleInput = this.handleInput.bind(this);\n        this.closeDialogs = this.closeDialogs.bind(this);\n        this.handleFormSubmit = this.handleFormSubmit.bind(this);\n        this.updateEmail = this.updateEmail.bind(this);\n        this.updatePassword = this.updatePassword.bind(this);\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n        const { emailDialogOpen, passwordDialogOpen } = this.state;\n        \n        if (emailDialogOpen) {\n            this.updateEmail();\n        } else if (passwordDialogOpen) {\n            this.updatePassword();\n        }\n    }\n\n    handleItemClick(e) {\n        const { id } = e.currentTarget;\n        if (id === 'email') {\n            const { self } = this.props.SelfStore;\n            this.setState({\n                emailDialogOpen: true,\n                email: self.email || '',\n                errors: {}\n            });\n        } else if (id === 'password') {\n            this.setState({\n                passwordDialogOpen: true, \n                errors: {}\n            });\n        }\n    }\n\n    closeDialogs(e) {\n        this.setState({\n            emailDialogOpen: false,\n            passwordDialogOpen: false\n        });\n    }\n\n    handleInput(e) {\n        const { value, name } = e.target;\n        this.setState({ [name]: value, errors: { [name]: '' } });\n    }\n\n    async updateEmail() {\n        const { email } = this.state;\n        const emailIsValid = validate(email);\n        if (emailIsValid) {\n            this.setState({ isLoading: true });\n            const { SelfStore } = this.props;\n            const result = await SelfStore.updateEmail(email);\n            if (result.success) {\n                this.closeDialogs();\n            } else {\n                this.setState({ errors: { email: result.error }});\n            }\n            this.setState({ isLoading: false });\n        } else {\n            this.setState({ errors: { email: 'Email is invalid' }});\n        }\n    }\n\n    async updatePassword() {\n        const { old_password, new_password, confirm } = this.state\n        \n        if (new_password !== confirm) {\n            return this.setState({ errors: { confirm: \"Passwords doesn't match\" } });\n        }\n\n        this.setState({ isLoading: true });\n        const result = await this.props.SelfStore.updatePassword(old_password, new_password);\n        this.setState({ isLoading: false });\n        if (result.success) {\n            this.closeDialogs();\n            this.setState({\n                old_password: '',\n                new_password: '',\n                confirm: '',\n            });\n        } else {\n            this.setState({ errors: result.error });\n        }\n    }\n\n    renderPasswordDialog(t) {\n        const { isLoading, passwordDialogOpen, old_password, new_password, confirm, errors } = this.state;\n        return (\n            <Dialog\n\t\t\t\topen={passwordDialogOpen}\n\t\t\t\tonClose={this.closeDialogs}\n\t\t\t\taria-labelledby=\"password-dialog-title\"\n\t\t\t\tfullWidth\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"password-dialog-title\">{t('settingsPage:changePassword')}</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<form onSubmit={this.handleFormSubmit}>\n                        <FormControl error={!!errors.old_password} margin=\"dense\" required fullWidth>\n                            <InputLabel htmlFor=\"old_password\">{t('settingsPage:currentPassword')}</InputLabel>\n                            <Input\n                                type=\"password\"\n                                name=\"old_password\"\n                                value={old_password}\n                                autoFocus\n                                onChange={this.handleInput}\n                            />\n                            <FormHelperText>{errors.old_password}</FormHelperText>\n                        </FormControl>\n                        <FormControl error={!!errors.new_password} margin=\"dense\" required fullWidth>\n                            <InputLabel htmlFor=\"new_password\">{t('settingsPage:newPassword')}</InputLabel>\n                            <Input\n                                type=\"password\"\n                                name=\"new_password\"\n                                value={new_password}\n                                onChange={this.handleInput}\n                            />\n                            <FormHelperText>{errors.new_password}</FormHelperText>\n                        </FormControl>\n                        <FormControl error={!!errors.confirm} margin=\"dense\" required fullWidth>\n                            <InputLabel htmlFor=\"confirm\">{t('settingsPage:confirmPassword')}</InputLabel>\n                            <Input\n                                type=\"password\"\n                                name=\"confirm\"\n                                value={confirm}\n                                onChange={this.handleInput}\n                            />\n                            <FormHelperText>{errors.confirm}</FormHelperText>\n                        </FormControl>\n\t\t\t\t\t</form>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={this.closeDialogs} color=\"primary\">\n                        {t('settingsPage:cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button disabled={isLoading} onClick={this.updatePassword} color=\"primary\">\n\t\t\t\t\t\t{isLoading ? <CircularProgress size={18}/> : t('settingsPage:save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n        );\n    }\n\n    renderEmailDialog(t) {\n        const { isLoading, emailDialogOpen, email, errors } = this.state;\n        return (\n            <Dialog\n\t\t\t\topen={emailDialogOpen}\n\t\t\t\tonClose={this.closeDialogs}\n\t\t\t\taria-labelledby=\"email-dialog-title\"\n\t\t\t\tfullWidth\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"email-dialog-title\">{t('settingsPage:emailAddress')}</DialogTitle>\n\t\t\t\t<DialogContent>\n                    <DialogContentText>\n                        {t('settingsPage:emailDialog')}\n                    </DialogContentText>\n\t\t\t\t\t<form onSubmit={this.handleFormSubmit}>\n                        <FormControl error={!!errors.email} margin=\"normal\" required fullWidth>\n                            <InputLabel htmlFor=\"email\">{t('settingsPage:email')}</InputLabel>\n                            <Input\n                                id=\"email\"\n                                type=\"email\"\n                                name=\"email\"\n                                value={email}\n                                autoFocus\n                                onChange={this.handleInput}\n                            />\n                            <FormHelperText>{errors.email}</FormHelperText>\n                        </FormControl>\n\t\t\t\t\t</form>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={this.closeDialogs} color=\"primary\">\n                        {t('settingsPage:cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button disabled={isLoading} onClick={this.updateEmail} color=\"primary\">\n\t\t\t\t\t\t{isLoading ? <CircularProgress size={18}/> : t('settingsPage:ok')}\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n        );\n    }\n\n    render() {\n        const { classes, t } = this.props;\n        const { self } = this.props.SelfStore;\n        return (\n            <React.Fragment>\n                { this.renderEmailDialog(t) }\n                { this.renderPasswordDialog(t) }\n                <Paper className={classes.paper}>\n                    <List disablePadding subheader={\n                        <ListSubheader disableSticky color=\"primary\">{t('settingsPage:account')}</ListSubheader>\n                    }>\n                        {\n                            !self.social_provider &&\n                            <ListItem id=\"password\" button divider onClick={this.handleItemClick}>\n                                <ListItemText\n                                    primary={t('settingsPage:changePassword')}\n                                />\n                            </ListItem>\n                        }\n                        <ListItem id=\"email\" button onClick={this.handleItemClick}>\n                            <ListItemText\n                                primary={t('settingsPage:changeEmail')}\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withStyles(styles)(AccountSection);\n","import React, { Component } from 'react'\nimport { Paper, withStyles, List, ListItem, ListItemText, ListSubheader, Dialog, DialogTitle, DialogContent, RadioGroup, FormControlLabel, Radio, DialogActions, Button, CircularProgress } from '@material-ui/core';\nimport { inject, observer } from 'mobx-react';\nimport { withNamespaces } from 'react-i18next';\n\nconst styles = theme => ({\n\tpaper: {\n\t\tmarginTop: theme.spacing.unit,\n\t\tmarginBottom: theme.spacing.unit,\n\t\tpadding: 0\n    }\n});\n\n@withNamespaces()\n@inject('SelfStore') @observer\nclass OtherSection extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            isLoading: false,\n            dialogOpen: false,\n            value: ''\n        };\n\n        this.openDialog = this.openDialog.bind(this);\n        this.handleDialogClose = this.handleDialogClose.bind(this);\n        this.updateLocale = this.updateLocale.bind(this);\n    }\n\n    handleFormSubmit(e) {\n        e.preventDefault();\n    }\n\n    handleDialogClose(e, reason) {\n        this.setState({ dialogOpen: false });\n    }\n\n    openDialog(e) {\n        const { locale } = this.props.SelfStore;\n        this.setState({\n            dialogOpen: true,\n            value: locale\n        });\n    }\n\n    async updateLocale() {\n        const locale = this.state.value;\n        const { SelfStore } = this.props;\n\n        if (locale === SelfStore.locale) {\n            return;\n        } else {\n            this.setState({ isLoading: true });\n            await SelfStore.updateLocale(locale);\n            this.setState({ isLoading: false });\n            this.handleDialogClose();\n        }\n    }\n\n    renderDialog(t) {\n        const { dialogOpen, value, isLoading } = this.state;\n\t\treturn (\n\t\t\t<Dialog\n\t\t\t\topen={dialogOpen}\n\t\t\t\tonClose={this.handleDialogClose}\n                aria-labelledby=\"locale-dialog-title\"\n                maxWidth=\"xs\"\n\t\t\t>\n\t\t\t\t<DialogTitle id=\"locale-dialog-title\">{t('settingsPage:language')}</DialogTitle>\n\t\t\t\t<DialogContent>\n\t\t\t\t\t<form onSubmit={this.handleFormSubmit.bind(this)}>\n                        <RadioGroup\n                            aria-label=\"Language\"\n                            name=\"locale\"\n                            value={value}\n                            onChange={(e, value) => this.setState({ value })}\n                        >\n                            <FormControlLabel value=\"en\" control={<Radio />} label=\"English\" />\n                            <FormControlLabel value=\"ru\" control={<Radio />} label=\"Русский\" />\n                        </RadioGroup>\n\t\t\t\t\t</form>\n\t\t\t\t</DialogContent>\n\t\t\t\t<DialogActions>\n\t\t\t\t\t<Button onClick={this.handleDialogClose} color=\"primary\">\n                        {t('settingsPage:cancel')}\n\t\t\t\t\t</Button>\n\t\t\t\t\t<Button disabled={isLoading} onClick={this.updateLocale} color=\"primary\">\n\t\t\t\t\t\t{isLoading ? <CircularProgress size={18}/> : t('settingsPage:save')}\n\t\t\t\t\t</Button>\n\t\t\t\t</DialogActions>\n\t\t\t</Dialog>\n\t\t);\n\t}\n    \n    render() {\n        const { classes, t } = this.props;\n        const { locale } = this.props.SelfStore;\n        const selectedLanguage = locale === 'en' ? 'English' : 'Русский';\n\n        return (\n            <React.Fragment>\n                { this.renderDialog(t) }\n                <Paper className={classes.paper}>\n                    <List disablePadding subheader={\n                        <ListSubheader disableSticky color=\"primary\">{t('settingsPage:other')}</ListSubheader>\n                    }>\n                        <ListItem id=\"locale\" button onClick={this.openDialog}>\n                            <ListItemText\n                                primary={selectedLanguage}\n                                secondary={t('settingsPage:language')}\n                            />\n                        </ListItem>\n                    </List>\n                </Paper>\n            </React.Fragment>\n        )\n    }\n}\n\nexport default withStyles(styles)(OtherSection);\n","import React from 'react';\nimport { withStyles, Grid } from '@material-ui/core';\n\nimport PictureSection from './PictureSection';\nimport ProfileSection from './ProfileSection';\nimport AccountSection from './AccountSection';\nimport OtherSection from './OtherSection';\n\nconst styles = theme => ({\n\tlayout: {\n\t\twidth: 'auto',\n\t\t[theme.breakpoints.up(600)]: {\n\t\t\twidth: 600,\n\t\t\tmarginLeft: 'auto',\n\t\t\tmarginRight: 'auto',\n\t\t}\n\t},\n\tcontainer : {\n\t\tdisplay: 'flex',\n\t\tflexDirection: 'column',\n\t\tmarginTop: theme.spacing.unit * 2,\n\t\tmarginBottom: theme.spacing.unit * 2,\n\t},\n\tpaper: {\n\t\tmarginTop: theme.spacing.unit,\n\t\tmarginBottom: theme.spacing.unit,\n\t\tpadding: 0\n\t},\n});\n\nclass SettingsPage extends React.Component {\n    render() {\n        const { classes } = this.props;\n        return (\n            <main className={classes.layout}>\n                <Grid className={classes.container} container spacing={0}>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<PictureSection />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<ProfileSection />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<AccountSection />\n\t\t\t\t\t</Grid>\n\t\t\t\t\t<Grid item xs={12}>\n\t\t\t\t\t\t<OtherSection />\n\t\t\t\t\t</Grid>\n\t\t\t\t</Grid>\n            </main>\n        )\n    }\n}\n\nexport default withStyles(styles)(SettingsPage);","import i18n from 'i18next';\n\ni18n.init({\n    lng: 'en',\n    resources: {\n        en: {\n            settingsPage: {\n                other: 'Other',\n                language: 'Language',\n                cancel: 'Cancel',\n                save: 'Save',\n                account: 'Account',\n                changePassword: 'Change password',\n                currentPassword: 'Current password',\n                newPassword: 'New password',\n                confirmPassword: 'Confirm new password',\n                changeEmail: 'Change Email',\n                fname: 'First Name',\n                lname: 'Last Name',\n                uname: 'Username',\n                bio: 'Bio',\n                none: 'None',\n                profile: 'Profile',\n                changeField: 'Change',\n                email: 'Email',\n                emailAddress: 'Email address',\n                emailDialog: 'New email address will be saved only if you confirmed it by following our confirmation link.',\n                ok: 'ok',\n                avatar: 'Avatar',\n                importPicture: 'Import picture from',\n                uploadPicture: 'Upload new picture',\n                deletePicture: 'Delete current picture',\n                imageProcessingFailed: 'image processing failed, please try again',\n                tooBigFile: 'file is too big, max size is 3MB',\n            },\n            header: {\n                settings: 'Settings',\n                logout: 'Logout',\n                register: 'Register',\n                login: 'Login',\n                Username: 'Username',\n\n            },\n            library: {\n                sortBy: 'Sort by',\n                popularityAscending: 'popularity ascending',\n                popularityDescending: 'popularity descending',\n                ratingAscending: 'rating ascending',\n                ratingDescending: 'rating descending',\n                releaseDateAscending: 'release date ascending',\n                releaseDateDescending: 'release date descending',\n                revenueAscending: 'revenue ascending',\n                revenueDescending: 'revenue descending',\n                originalTitleAscending: 'original title (A-Z)',\n                originalTitleDescending: 'original title (Z-A)',\n                genres: 'Genres',\n                releaseYear: 'Release year',\n                any: 'Any',\n                search: 'Search',\n                close: 'Close',\n                rating: 'Rating',\n                noRating: 'No rating',\n                action: 'Action',\n                adventure: 'Adventure',\n                animation: 'Animation',\n                comedy: 'Comedy',\n                crime: 'Crime',\n                documentary: 'Documentary',\n                drama: 'Drama',\n                family: 'Family',\n                fantasy: 'Fantasy',\n                history: 'History',\n                horror: 'Horror',\n                music: 'Music',\n                mystery: 'Mystery',\n                romance: 'Romance',\n                scienceFiction: 'Science Fiction',\n                tvMovie: 'TV Movie',\n                thriller: 'Thriller',\n                war: 'War',\n                western: 'Western',\n                releaseDataUnknown: 'Release date unknown',\n                loadMore: 'Load more'\n            },\n            movie: {\n                unavailable: 'This movie is unavailable',\n                stream: 'STREAM IN',\n                cancel: 'Cancel',\n                send: 'Send',\n                originalTitle: 'Original title: ',\n                releaseDate: 'Release date: ',\n                runtime: 'Runtime: ',\n                rating: 'Rating: ',\n                liveComment: 'Leave a comment',\n                directors: 'Directors: ',\n                producers: 'Producers: ',\n                mainCast: 'Main cast: ',\n                streamIn: 'Stream in',\n                minutes: 'minutes'\n            },\n            login: {\n                LogIn: 'Log in',\n                logIn: 'Log in',\n                username: 'Username',\n                password: 'Password',\n                forgotPassword: 'Forgot password?',\n            },\n            registration: {\n                registration: 'Registration',\n                checkEmail: 'Please, check your email and follow the link we\\'\\ve sent to activate your account.',\n                ok: 'ok',\n                register: 'Register',\n                fname: 'First Name',\n                lname: 'Last Name',\n                username: 'Username',\n                email: 'Email',\n                password: 'Password',\n                confirmPassword: 'Confirm Password',\n            }\n        },\n        ru: {\n            settingsPage: {\n                other: 'Другое',\n                language: 'Язык',\n                cancel: 'Закрыть',\n                save: 'Сохранить',\n                account: 'Аккаунт',\n                changePassword: 'Изменить пароль',\n                currentPassword: 'Текущий пароль',\n                newPassword: 'Новый пароль',\n                confirmPassword: 'Подтвердите новый пароль',\n                changeEmail: 'Изменить почту',\n                fname: 'Имя',\n                lname: 'Фамилия',\n                uname: 'Логин',\n                bio: 'Биография',\n                none: 'Отсутствует',\n                profile: 'Профиль',\n                changeField: 'Изменить поле',\n                email: 'Почта',\n                emailAddress: 'Почтовый адрес',\n                emailDialog: 'Новий почтовий адрес будет сохранен только когда вы подтвердите его перейдя по ссылке которую мы туда отправим',\n                ok: 'ок',\n                avatar: 'Аватар',\n                importPicture: 'Импортировать изображение из',\n                uploadPicture: 'Загрузить новое изображение',\n                deletePicture: 'Удалить текущее изображение',\n                imageProcessingFailed: 'Обработка изображения не удалась, пожалуйста, попробуйте снова',\n                tooBigFile: 'Файл слишком большой, максимальный размер - 3MB'\n            },\n            header: {\n                settings: 'Настройки',\n                logout: 'Выход',\n                register: 'Регистрация',\n                login: 'Вход'\n            },\n            library: {\n                sortBy: 'Сортировать по',\n                popularityAscending: 'возрастанию популярности',\n                popularityDescending: 'убыванию популярности',\n                ratingAscending: 'возрастанию рейтинга',\n                ratingDescending: 'убыванию рейтинга',\n                releaseDateAscending: 'дате выхода, новые в начале',\n                releaseDateDescending: 'дате выхода, новые в конце',\n                revenueAscending: 'возрастанию сборов',\n                revenueDescending: 'убыванию сборов',\n                originalTitleAscending: 'алфавиту (А-Я)',\n                originalTitleDescending: 'алфавиту (Я-А)',\n                genres: 'Жанры',\n                releaseYear: 'Год выхода',\n                any: 'Любой',\n                search: 'Поиск',\n                close: 'Закрыть',\n                rating: 'Рейтинг',\n                noRating: 'Рейтинг отсутствует',\n                action: 'Экшн',\n                adventure: 'Приключения',\n                animation: 'Анимации',\n                comedy: 'Комедия',\n                crime: 'Криминал',\n                documentary: 'Документальные',\n                drama: 'Драма',\n                family: 'Семейные',\n                fantasy: 'Фантастика',\n                history: 'История',\n                horror: 'Ужасы',\n                music: 'Мюзиклы',\n                mystery: 'Мистика',\n                romance: 'Романы',\n                scienceFiction: 'Научная фантастика',\n                tvMovie: 'Телесериалы',\n                thriller: 'Триллер',\n                war: 'Военные',\n                western: 'Вестерн',\n                releaseDataUnknown: 'Дата выхода неизвестна',\n                loadMore: 'Показать больше'\n            },\n            movie: {\n                unavailable: 'Этот фильм недоступен',\n                stream: 'Смотреть в ',\n                cancel: 'Отменить',\n                send: 'Отправить',\n                originalTitle: 'Оригинальное название: ',\n                releaseDate: 'Дата выхода: ',\n                runtime: 'Продолжительность : ',\n                rating: 'Рейтинг: ',\n                liveComment: 'Оставить коментарий',\n                directors: 'Режиссеры: ',\n                producers: 'Продюсеры: ',\n                mainCast: 'В главных ролях: ',\n                streamIn: 'Смотреть в',\n                minutes: 'минут'\n            },\n            login: {\n                LogIn: 'Вход',\n                logIn: 'Войти',\n                username: 'Логин',\n                password: 'Пароль',\n                forgotPassword: 'Забыли пароль?',\n            },\n            registration: {\n                registration: 'Регистрация',\n                checkEmail: 'Пожалуйста, проверьте свою почту и следуйте по ссылке которую мы отправили для активации Вашего аккаунта',\n                ok: 'ок',\n                register: 'Зарегистрироватся',\n                fname: 'Имя',\n                lname: 'Фамилия',\n                username: 'Логин',\n                email: 'Електронная почта',\n                password: 'Пароль',\n                confirmPassword: 'Подтверждение пароля',\n\n            }\n        }\n    }\n});\n\nexport default i18n;","import React, { Component } from 'react';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Movie from './components/Movie';\nimport Auth from './components/Auth';\nimport NotFound from './components/NotFound';\nimport User from './components/User';\nimport Library from './components/Library';\nimport {Switch, Route, Redirect, BrowserRouter} from 'react-router-dom';\nimport { inject, observer } from 'mobx-react';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\nimport blue from '@material-ui/core/colors/blue';\nimport SettingsPage from './components/SettingsPage';\nimport { I18nextProvider } from 'react-i18next';\nimport i18n from './helpers/i18n.js';\nimport './HyperTube.css';\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: blue\n  },\n  typography: {\n    useNextVariants: true,\n  },\n});\n\n@inject('SelfStore') @observer\nclass HyperTube extends Component {\n    componentDidMount(){\n        const { SelfStore } = this.props;\n        SelfStore.pullSelf();\n    }\n\n    render() {\n        const { SelfStore } = this.props;\n        if (SelfStore.self === undefined) {\n            return null;\n        } else {\n            return (\n                <I18nextProvider i18n={i18n}>\n                    <MuiThemeProvider theme={theme}>\n                        <BrowserRouter>\n                            <React.Fragment>\n                                <CssBaseline/>\n                                <Header/>\n                                <Switch>\n                                    <Route path=\"/auth\" component={Auth}/>\n                                    <PrivateRoute exact path=\"/\" component={Library}/>\n                                    <PrivateRoute exact path=\"/user/:username\" component={User}/>\n                                    <PrivateRoute exact path=\"/settings\" component={SettingsPage}/>\n                                    <PrivateRoute exact path=\"/movie/:id([0-9]*)\" component={Movie}/>\n                                    <Route path=\"*\" component={NotFound}/>\n                                </Switch>\n                                <Footer/>\n                            </React.Fragment>\n                        </BrowserRouter>\n                    </MuiThemeProvider>\n                </I18nextProvider>\n            );\n        }\n    }\n}\n\n@inject('SelfStore') @observer\nclass PrivateRoute extends Component {\n  render() {\n    const { SelfStore, component: Component, ...rest } = this.props;\n    return (\n\t\t\t<Route {...rest} render={(props) => (\n\t\t\t\tSelfStore.self\n\t\t\t\t\t? <Component {...props} />\n\t\t\t\t\t: <Redirect to='/auth/login' />\n\t\t\t)} />\n\t\t);\n  }\n}\n\nexport default HyperTube;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import { observable, action, toJS } from \"mobx\";\nimport axios from 'axios';\n\nclass LibraryStore {\n    _lastSelectedMovie = undefined;\n    @observable isLoading = false;\n\n    @observable searchMode = false;\n    @observable currentQuery = undefined;\n\n    @observable movies = undefined;\n    @observable currentPage = undefined;\n    @observable totalPages = undefined;\n\n    @observable filters = {\n        \"sort_by\": \"popularity.desc\",\n        \"primary_release_date.gte\": \"2000-01-01\",\n        \"primary_release_date.lte\": \"2019-12-31\",\n        \"vote_average.gte\": \"5\",\n        \"with_genres\": []\n    }\n\n    @action setIsLoading(status) {\n        this.isLoading = status;\n    }\n\n    @action setSearchMode(status) {\n        this.searchMode = status;\n    }\n\n    @action setCurrentQuery(value) {\n        this.currentQuery = value;\n    }\n    \n    @action setPage(page) {\n        this.currentPage = page;\n    }\n\n    @action setTotalPages(pages) {\n        this.totalPages = pages;\n    }\n\n    @action setFilter(name, value) {\n        this.filters[name] = value;\n    }\n\n    @action setMovies(movies) {\n        this.movies = movies;\n    }\n\n    @action pushMovies(moreMovies) {\n        this.movies.push(...moreMovies);\n    }\n\n    @action setGenres(genres) {\n        this.filters.with_genres = genres;\n    }\n\n    @action deleteGenre(genreId) {\n        const { with_genres } = this.filters;\n        const genreToDelete = with_genres.indexOf(genreId);\n        with_genres.splice(genreToDelete, 1);\n    }\n\n    @action resetFilters() {\n        this.filters = {\n            \"sort_by\": \"popularity.desc\",\n            \"primary_release_date.gte\": \"\",\n            \"primary_release_date.lte\": \"\",\n            \"vote_average.gte\": \"\",\n            \"with_genres\": []\n        };\n    }\n\n    @action resetMovies() {\n        this.movies = undefined;\n        this.currentPage = undefined;\n        this.totalPages = undefined;\n    }\n\n    @action setSelectedMovieAsWatched() {\n        const { _lastSelectedMovie } = this\n        if (_lastSelectedMovie !== undefined) {\n            this.movies[_lastSelectedMovie].watched_films_count = 1;\n        }\n    }\n\n    async fetchMovies(pageToFetch = 1) {\n        const params = this._getDefinedFilters();\n        params.page = pageToFetch;\n        try {\n            this.setIsLoading(true);\n            const response = await axios.get(`${process.env.REACT_APP_MOVIE_API_URL}/films`, {\n                params,\n                withCredentials: true\n            });\n            if (response.data.success === true) {\n                const { page, total_pages, results } = response.data.movies;\n                if (pageToFetch === 1) {\n                    this.setMovies(results);\n                } else {\n                    this.pushMovies(results)\n                }\n                this.setPage(page);\n                this.setTotalPages(total_pages);\n            } else {\n                this.setMovies(null);\n                console.log(response.data.error);\n            }\n        } catch (e) {\n            this.setMovies(null);\n            console.error(e);\n        } finally {\n            this.setIsLoading(false);\n        }\n    }\n\n    async fetchSearchResults(pageToFetch = 1) {\n        this.setIsLoading(true);\n        try {\n            const response = await axios.get(`${process.env.REACT_APP_MOVIE_API_URL}/films`, {\n                params: { query: this.currentQuery, page: pageToFetch },\n                withCredentials: true\n            });\n            if (response.data.success === true) {\n                const { page, total_pages, results } = response.data.movies;\n                if (pageToFetch === 1) {\n                    this.setMovies(results);\n                } else {\n                    this.pushMovies(results)\n                }\n                this.setPage(page);\n                this.setTotalPages(total_pages);\n            } else {\n                this.setMovies(null);\n                console.log(response.data.error);\n            }\n        } catch (e) {\n            console.error(e);\n        } finally {\n            this.setIsLoading(false);\n        }\n    }\n\n    _getDefinedFilters() {\n        const currentFilters = this.filters;\n        const definedFilterKeys = [];\n        Object.keys(this.filters).forEach(filter => {\n            if (this.filters[filter] !== undefined) {\n                definedFilterKeys.push(filter);\n            }\n        });\n\n        let filters = {};\n        if (definedFilterKeys.length > 0) {\n            definedFilterKeys.forEach(filter => {\n                filters[filter] = currentFilters[filter];\n            });\n        }\n\n        return toJS(filters);\n    }\n}\n\nexport default new LibraryStore();","import { observable, action, reaction } from \"mobx\";\nimport axios from 'axios';\nimport LibraryStore from \"./LibraryStore\";\nimport i18n from \"../helpers/i18n\";\n\nclass SelfStore {\n    @observable locale = 'en'\n    @observable self = undefined;\n\n    @action setSelf(data) {\n        this.self = data;\n    }\n\n    @action setLocale(locale) {\n        this.locale = locale;\n    }\n\n    @action updateSelfField(fieldName, value) {\n        this.self[fieldName] = value;\n    }\n\n    @action forgetSelf() {\n        this.self = null;\n    }\n\n    async pullSelf() {\n        try {\n            const response = await axios.get(\n                `${process.env.REACT_APP_ERL_API_URL}/api/profile`,\n                { withCredentials: true }\n            );\n            const { locale, ...self } = response.data.payload;\n            this.setSelf(self);\n            this.setLocale(locale);\n        } catch (e) {\n            this.setSelf(null);\n            if (e.response.status !== 403) {\n                console.error(e);\n            }\n        }\n    }\n\n    async importPictureFromSocial() {\n        try {\n            const response = await axios.get(`\n                ${process.env.REACT_APP_ERL_API_URL}/api/social_avatar`,\n                { withCredentials: true }\n            );\n            if (response.data.status === \"ok\") {\n                const avatar = response.data.payload.avatar;\n                this.updateSelfField('avatar', avatar);\n            } else {\n                const error = Object.values(response.data.reason)[0];\n                console.error(error);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n    \n    async updateProfile(fieldName, value) {\n        const data = {};\n        data[fieldName] = value;\n        \n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_ERL_API_URL}/api/profile`,\n                data,\n                { withCredentials: true }\n            );\n            if (response.data.status === \"ok\") {\n                const updatedValue = response.data.payload[fieldName];\n                this.updateSelfField(fieldName, updatedValue);\n                return { success: true };\n            } else {\n                const error = Object.values(response.data.reason)[0];\n                return { success: false, error }\n            }\n        } catch (e) {\n            console.error(e);\n            return { success: false, error: 'Unexpected error occured' };\n        }\n    }\n    \n    async updateEmail(value) {\n        const data = { email: value };\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_ERL_API_URL}/api/profile/email`,\n                data,\n                { withCredentials: true }\n            );\n            if (response.data.status === \"ok\") {\n                return { success: true };\n            } else {\n                const error = Object.values(response.data.reason)[0];\n                return { success: false, error }\n            }\n        } catch (e) {\n            console.error(e);\n            return { success: false, error: 'Unexpected error occured' };\n        }\n    }\n\n    async updateLocale(value) {\n        const data = { locale: value };\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_ERL_API_URL}/api/profile/locale`,\n                data,\n                { withCredentials: true }\n            );\n            if (response.data.status === \"ok\") {\n                this.setLocale(value);\n                LibraryStore.resetMovies()\n                LibraryStore.setSearchMode(false);\n            } else {\n                return false;\n            }\n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n    }\n\n    async updatePassword(old_password, new_password) {\n        const data = { old_password, new_password };\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_ERL_API_URL}/api/profile/pass`,\n                data,\n                { withCredentials: true }\n            );\n            if (response.data.status === \"ok\") {\n                return { success: true };\n            } else {\n                return { success: false, error: response.data.reason };\n            }\n        } catch (e) {\n            console.error(e);\n            return { success: false, error: { old_password: 'Some unexpected error occured' }}\n        }\n    }\n    \n}\n\nconst store = new SelfStore();\n\nreaction(\n    () => store.locale,\n    locale => i18n.changeLanguage(locale)\n);\n\nexport default store;\n","import { observable, action } from \"mobx\";\nimport * as EmailValidator from 'email-validator';\nimport axios from 'axios';\n\nimport UserStore from './SelfStore';\n\nclass AuthStore {\n    @observable fields = {\n        fname: '',\n        lname: '',\n        uname: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    }\n\n    @observable errors = {\n        fname: '',\n        lname: '',\n        uname: '',\n        email: '',\n        password: '',\n        confirmPassword: ''\n    }\n\n    @action setFieldValue(name, value) {\n        this.fields[name] = value;\n        this.errors[name] = '';\n    }\n\n    @action setError(fieldName, error) {\n        this.errors[fieldName] = error;\n    }\n\n    @action setErrors(errors) {\n        Object.keys(errors).forEach(field => {\n            this.errors[field] = errors[field];\n        });\n    }\n\n    async register() {\n        if (this._validateFields(['fname','lname','uname','email','password','confirmPassword'])) {\n            const { ...fields } = this.fields;\n            this.clearErrors();\n            try {\n                const response = await axios.post(\n                    `${process.env.REACT_APP_ERL_API_URL}/api/auth/registration`,\n                    fields,\n                    {withCredentials: true}\n                );\n                if (response.data.status === \"ok\") {\n                    this.resetStore();\n                    return true;\n                } else if (response.data.status === \"error\") {\n                    this.setErrors(response.data.reason);\n                    return false;\n                }\n            } catch (e) {\n                console.error(e);\n            }\n        }\n    }\n\n    async login() {\n        const { uname, password } = this.fields;\n        this.clearErrors();\n        try {\n            const response = await axios.post(\n                `${process.env.REACT_APP_ERL_API_URL}/api/auth/login`,\n                { uname, password },\n                {withCredentials: true}\n            );\n            if (response.data.status === 'ok') {\n                UserStore.setSelf(response.data.payload);\n            } else {\n                this.setErrors({ uname: 'Invalid username or password' });\n            }   \n        } catch (e) {\n            console.error(e);\n            return false;\n        }\n    }\n\n    async lostPass() {\n        if (this._validateFields(['email'])) {\n            const { email } = this.fields;\n            this.clearErrors();\n            try {\n                const response = await axios.post(\n                    `${process.env.REACT_APP_ERL_API_URL}/api/auth/lostpass`,\n                    { email },\n                    {withCredentials: true}\n                );\n                if (response.data.status === 'ok') {\n                    this.setFieldValue('email', '');\n                    return true;\n                } else if (response.data.status === \"error\"){\n                    this.setErrors(response.data.reason);\n                    return false;\n                }   \n            } catch (e) {\n                console.error(e);\n                return false;\n            }\n        }\n    }\n\n     async newPass() {\n        if (this._validateFields(['password', 'confirmPassword'])) {\n            const { password } = this.fields;\n            this.clearErrors();\n            try {\n                const response = await axios.post(\n                    `${process.env.REACT_APP_ERL_API_URL}/api/auth/lostpass/newpass`,\n                    { password },\n                    {withCredentials: true}\n                );\n                if (response.data.status === 'ok') {\n                    return true;\n                } else if (response.data.status === \"error\"){\n                    this.setErrors(response.data.reason);\n                    return false;\n                }   \n            } catch (e) {\n                console.error(e);\n                return false;\n            }\n        }\n    }\n\n    async logout() {\n        try {\n            await axios.post(\n                `${process.env.REACT_APP_ERL_API_URL}/api/auth/logout`,\n                null,\n                {withCredentials: true}\n            );\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    @action clearErrors() {\n        this.errors = {\n            fname: '',\n            lname: '',\n            uname: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        };\n    }\n\n    @action resetStore() {\n        this.fields = {\n            fname: '',\n            lname: '',\n            uname: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        };\n\n        this.errors = {\n            fname: '',\n            lname: '',\n            uname: '',\n            email: '',\n            password: '',\n            confirmPassword: ''\n        };\n    }\n\n    _validateFields(fields) {\n        let isValid = true;\n        const {\n            fname,\n            lname,\n            uname,\n            email,\n            password,\n            confirmPassword\n        } = this.fields;\n\n        fields.forEach(name => {\n            if (name === \"uname\") {\n                if (uname.length < 6){\n                    this.setError(name, \"Username is too short.\");\n                    isValid = false;\n                } else if (uname.length > 16) {\n                    this.setError(name, \"Username is too long\");\n                    isValid = false;\n                }\n            } else if (name === \"fname\"){\n                if (fname.length < 1){\n                    this.setError(name, \"First name is too short.\");\n                    isValid = false;\n                } else if (fname.length > 50) {\n                    this.setError(name, \"First name is too long\");\n                    isValid = false;\n                }\n            } else if (name === \"lname\"){\n                if (lname.length < 1){\n                    this.setError(name, \"Last name is too short.\");\n                    isValid = false;\n                } else if (lname.length > 50) {\n                    this.setError(name, \"Last name is too long\");\n                    isValid = false;\n                }\n            } else if (name === \"password\"){\n                if (password.length < 8){\n                    this.setError(name, \"Password is too short.\");\n                    isValid = false;\n                } else if (password.length > 20) {\n                    this.setError(name, \"Password is too long\");\n                    isValid = false;\n                }\n            } else if (name === \"confirmPassword\") {\n                if (password !== confirmPassword) {\n                    this.setError(\"confirmPassword\", \"Passwords doesn't match.\");\n                    isValid = false;\n                }\n            } else if (name === \"email\"){\n                if (EmailValidator.validate(email) === false){\n                    this.setError(name, \"Email is invalid.\");\n                    isValid = false;\n                }\n            }\n\n        });\n\n        return isValid;\n    }\n}\n\nexport default new AuthStore();\n","import { observable, action } from \"mobx\";\nimport axios from 'axios';\n\nclass UserStore {\n    @observable user = undefined;\n\n    @action setUser(data) {\n        this.user = data;\n    }\n\n    @action forgetUser() {\n        this.user = null;\n    }\n\n    async pullUser(username) {\n        try {\n            const response = await axios.get(\n                `${process.env.REACT_APP_ERL_API_URL}/api/user/${username}`,\n                { withCredentials: true }\n            );\n            this.setUser(response.data.payload);\n        } catch (e) {\n            this.user = null;\n            console.error(e);\n        }\n    }\n}\n\nexport default new UserStore();\n","import { observable, action } from \"mobx\";\nimport axios from 'axios';\n\nclass MovieStore {\n    @observable isLoading = false;\n    @observable movie = undefined;\n    @observable stream = undefined;\n    @observable comments = [];\n\n    @action setMovie(movie) {\n        this.movie = movie;\n    }\n\n    @action resetMovie() {\n        this.movie = undefined;\n    }\n    @action setComments(comments) {\n        this.comments = comments;\n    }\n\n    @action addComment(comment) {\n        this.comments.unshift(comment);\n    }\n\n    @action setStream(stream) {\n        this.stream = stream;\n    }\n\n    async fetchMovieDetails(movieId) {\n        const url = `${process.env.REACT_APP_MOVIE_API_URL}/film_details/${movieId}`;\n        try {\n            const response = await axios.get(url, {\n                withCredentials: true\n            });\n            if (response.data.success) {\n                const { movie_details: details, streaming, subtitles } = response.data;\n                this.setMovie({ ...details, streaming, subtitles });\n            } else {\n                this.setMovie(null);\n            }\n        } catch (e) {\n            console.error(e);\n            this.setMovie(null);\n        }\n    }\n\n    async fetchComments(movieId) {\n        const url = `${process.env.REACT_APP_ERL_API_URL}/api/comments`;\n        try {\n            const response = await axios.get(url, {\n                withCredentials: true,\n                params: {\n                    id: movieId,\n                }\n            });\n            if (response.data.status === 'ok') {\n                this.setComments(response.data.payload);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n\n    async postComment(movieId, text) { \n        const url = `${process.env.REACT_APP_ERL_API_URL}/api/comments`;\n        const body = {imdb_id: movieId, text: text};\n\n        try {\n            const response = await axios.post(url, body, {\n                withCredentials: true,\n            });\n            if (response.data.status === 'ok') {\n                this.addComment(response.data.payload);\n            }\n        } catch (e) {\n            console.error(e);\n        }\n    }\n}\n\nexport default new MovieStore();","import AuthStore from './AuthStore';\nimport SelfStore from './SelfStore';\nimport UserStore from './UserStore';\nimport LibraryStore from './LibraryStore';\nimport MovieStore from './MovieStore';\n\nconst stores = {\n\tAuthStore,\n\tSelfStore,\n\tUserStore,\n\tLibraryStore,\n\tMovieStore\n};\n\nexport default stores;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport HyperTube from './HyperTube';\nimport * as serviceWorker from './serviceWorker';\nimport { Provider } from 'mobx-react';\nimport stores from './stores';\n\nReactDOM.render((\n\t\t<Provider { ...stores }>\n\t\t\t<HyperTube/>\n\t\t</Provider>\n), document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}